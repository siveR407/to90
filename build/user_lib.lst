ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"user_lib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "moudels/algorithm/user_lib.c"
  20              		.section	.text.zmalloc,"ax",%progbits
  21              		.align	1
  22              		.global	zmalloc
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	zmalloc:
  28              	.LVL0:
  29              	.LFB172:
   1:moudels/algorithm/user_lib.c **** /**
   2:moudels/algorithm/user_lib.c ****  ******************************************************************************
   3:moudels/algorithm/user_lib.c ****  * @file	 user_lib.c
   4:moudels/algorithm/user_lib.c ****  * @author  Wang Hongxi
   5:moudels/algorithm/user_lib.c ****  * @author  modified by neozng
   6:moudels/algorithm/user_lib.c ****  * @version 0.2 beta
   7:moudels/algorithm/user_lib.c ****  * @date    2021/2/18
   8:moudels/algorithm/user_lib.c ****  * @brief
   9:moudels/algorithm/user_lib.c ****  ******************************************************************************
  10:moudels/algorithm/user_lib.c ****  * @attention
  11:moudels/algorithm/user_lib.c ****  *
  12:moudels/algorithm/user_lib.c ****  ******************************************************************************
  13:moudels/algorithm/user_lib.c ****  */
  14:moudels/algorithm/user_lib.c **** #include "stdlib.h"
  15:moudels/algorithm/user_lib.c **** #include "memory.h"
  16:moudels/algorithm/user_lib.c **** #include "user_lib.h"
  17:moudels/algorithm/user_lib.c **** #include "math.h"
  18:moudels/algorithm/user_lib.c **** #include "main.h"
  19:moudels/algorithm/user_lib.c **** 
  20:moudels/algorithm/user_lib.c **** #ifdef _CMSIS_OS_H
  21:moudels/algorithm/user_lib.c **** #define user_malloc pvPortMalloc
  22:moudels/algorithm/user_lib.c **** #else
  23:moudels/algorithm/user_lib.c **** #define user_malloc malloc
  24:moudels/algorithm/user_lib.c **** #endif
  25:moudels/algorithm/user_lib.c **** 
  26:moudels/algorithm/user_lib.c **** void *zmalloc(size_t size)
  27:moudels/algorithm/user_lib.c **** {
  30              		.loc 1 27 1 view -0
  31              		.cfi_startproc
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s 			page 2


  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 27 1 is_stmt 0 view .LVU1
  35 0000 38B5     		push	{r3, r4, r5, lr}
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41 0002 0546     		mov	r5, r0
  28:moudels/algorithm/user_lib.c ****     void *ptr = malloc(size);
  42              		.loc 1 28 5 is_stmt 1 view .LVU2
  43              		.loc 1 28 17 is_stmt 0 view .LVU3
  44 0004 FFF7FEFF 		bl	malloc
  45              	.LVL1:
  46              		.loc 1 28 17 view .LVU4
  47 0008 0446     		mov	r4, r0
  48              	.LVL2:
  29:moudels/algorithm/user_lib.c ****     memset(ptr, 0, size);
  49              		.loc 1 29 5 is_stmt 1 view .LVU5
  50 000a 2A46     		mov	r2, r5
  51 000c 0021     		movs	r1, #0
  52 000e FFF7FEFF 		bl	memset
  53              	.LVL3:
  30:moudels/algorithm/user_lib.c ****     return ptr;
  54              		.loc 1 30 5 view .LVU6
  31:moudels/algorithm/user_lib.c **** }
  55              		.loc 1 31 1 is_stmt 0 view .LVU7
  56 0012 2046     		mov	r0, r4
  57 0014 38BD     		pop	{r3, r4, r5, pc}
  58              		.loc 1 31 1 view .LVU8
  59              		.cfi_endproc
  60              	.LFE172:
  62              		.section	.text.Sqrt,"ax",%progbits
  63              		.align	1
  64              		.global	Sqrt
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  69              	Sqrt:
  70              	.LVL4:
  71              	.LFB173:
  32:moudels/algorithm/user_lib.c **** 
  33:moudels/algorithm/user_lib.c **** // 快速开方
  34:moudels/algorithm/user_lib.c **** float Sqrt(float x)
  35:moudels/algorithm/user_lib.c **** {
  72              		.loc 1 35 1 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77              		.loc 1 35 1 is_stmt 0 view .LVU10
  78 0000 F0EE405A 		vmov.f32	s11, s0
  36:moudels/algorithm/user_lib.c ****     float y;
  79              		.loc 1 36 5 is_stmt 1 view .LVU11
  37:moudels/algorithm/user_lib.c ****     float delta;
  80              		.loc 1 37 5 view .LVU12
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s 			page 3


  38:moudels/algorithm/user_lib.c ****     float maxError;
  81              		.loc 1 38 5 view .LVU13
  39:moudels/algorithm/user_lib.c **** 
  40:moudels/algorithm/user_lib.c ****     if (x <= 0)
  82              		.loc 1 40 5 view .LVU14
  83              		.loc 1 40 8 is_stmt 0 view .LVU15
  84 0004 B5EEC00A 		vcmpe.f32	s0, #0
  85 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  86 000c 1ED9     		bls	.L6
  41:moudels/algorithm/user_lib.c ****     {
  42:moudels/algorithm/user_lib.c ****         return 0;
  43:moudels/algorithm/user_lib.c ****     }
  44:moudels/algorithm/user_lib.c **** 
  45:moudels/algorithm/user_lib.c ****     // initial guess
  46:moudels/algorithm/user_lib.c ****     y = x / 2;
  87              		.loc 1 46 5 is_stmt 1 view .LVU16
  88              		.loc 1 46 7 is_stmt 0 view .LVU17
  89 000e F6EE007A 		vmov.f32	s15, #5.0e-1
  90 0012 20EE270A 		vmul.f32	s0, s0, s15
  91              	.LVL5:
  47:moudels/algorithm/user_lib.c **** 
  48:moudels/algorithm/user_lib.c ****     // refine
  49:moudels/algorithm/user_lib.c ****     maxError = x * 0.001f;
  92              		.loc 1 49 5 is_stmt 1 view .LVU18
  93              		.loc 1 49 14 is_stmt 0 view .LVU19
  94 0016 9FED0F6A 		vldr.32	s12, .L7
  95 001a 25EE866A 		vmul.f32	s12, s11, s12
  96              	.LVL6:
  97              	.L5:
  50:moudels/algorithm/user_lib.c **** 
  51:moudels/algorithm/user_lib.c ****     do
  98              		.loc 1 51 5 is_stmt 1 view .LVU20
  52:moudels/algorithm/user_lib.c ****     {
  53:moudels/algorithm/user_lib.c ****         delta = (y * y) - x;
  99              		.loc 1 53 9 view .LVU21
 100              		.loc 1 53 20 is_stmt 0 view .LVU22
 101 001e 60EE007A 		vmul.f32	s15, s0, s0
 102              		.loc 1 53 15 view .LVU23
 103 0022 77EEE57A 		vsub.f32	s15, s15, s11
 104              	.LVL7:
  54:moudels/algorithm/user_lib.c ****         y -= delta / (2 * y);
 105              		.loc 1 54 9 is_stmt 1 view .LVU24
 106              		.loc 1 54 25 is_stmt 0 view .LVU25
 107 0026 70EE006A 		vadd.f32	s13, s0, s0
 108              		.loc 1 54 20 view .LVU26
 109 002a 87EEA67A 		vdiv.f32	s14, s15, s13
 110              		.loc 1 54 11 view .LVU27
 111 002e 30EE470A 		vsub.f32	s0, s0, s14
 112              	.LVL8:
  55:moudels/algorithm/user_lib.c ****     } while (delta > maxError || delta < -maxError);
 113              		.loc 1 55 31 is_stmt 1 discriminator 3 view .LVU28
 114 0032 B4EEE76A 		vcmpe.f32	s12, s15
 115 0036 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 116 003a F0D4     		bmi	.L5
 117              		.loc 1 55 42 is_stmt 0 discriminator 2 view .LVU29
 118 003c B1EE467A 		vneg.f32	s14, s12
 119              		.loc 1 55 31 discriminator 2 view .LVU30
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s 			page 4


 120 0040 B4EEE77A 		vcmpe.f32	s14, s15
 121 0044 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 122 0048 E9DC     		bgt	.L5
 123 004a 7047     		bx	lr
 124              	.LVL9:
 125              	.L6:
  42:moudels/algorithm/user_lib.c ****     }
 126              		.loc 1 42 16 view .LVU31
 127 004c 9FED020A 		vldr.32	s0, .L7+4
 128              	.LVL10:
  56:moudels/algorithm/user_lib.c **** 
  57:moudels/algorithm/user_lib.c ****     return y;
  58:moudels/algorithm/user_lib.c **** }
 129              		.loc 1 58 1 view .LVU32
 130 0050 7047     		bx	lr
 131              	.L8:
 132 0052 00BF     		.align	2
 133              	.L7:
 134 0054 6F12833A 		.word	981668463
 135 0058 00000000 		.word	0
 136              		.cfi_endproc
 137              	.LFE173:
 139              		.section	.text.abs_limit,"ax",%progbits
 140              		.align	1
 141              		.global	abs_limit
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 146              	abs_limit:
 147              	.LVL11:
 148              	.LFB174:
  59:moudels/algorithm/user_lib.c **** 
  60:moudels/algorithm/user_lib.c **** // 绝对值限制
  61:moudels/algorithm/user_lib.c **** float abs_limit(float num, float Limit)
  62:moudels/algorithm/user_lib.c **** {
 149              		.loc 1 62 1 is_stmt 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 154              		.loc 1 62 1 is_stmt 0 view .LVU34
 155 0000 F0EE407A 		vmov.f32	s15, s0
 156 0004 B0EE600A 		vmov.f32	s0, s1
 157              	.LVL12:
  63:moudels/algorithm/user_lib.c ****     if (num > Limit)
 158              		.loc 1 63 5 is_stmt 1 view .LVU35
 159              		.loc 1 63 8 is_stmt 0 view .LVU36
 160 0008 F4EEE07A 		vcmpe.f32	s15, s1
 161 000c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 162 0010 08DC     		bgt	.L10
  64:moudels/algorithm/user_lib.c ****     {
  65:moudels/algorithm/user_lib.c ****         num = Limit;
  66:moudels/algorithm/user_lib.c ****     }
  67:moudels/algorithm/user_lib.c ****     else if (num < -Limit)
 163              		.loc 1 67 10 is_stmt 1 view .LVU37
 164              		.loc 1 67 20 is_stmt 0 view .LVU38
 165 0012 B1EE600A 		vneg.f32	s0, s1
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s 			page 5


 166              		.loc 1 67 13 view .LVU39
 167 0016 B4EEE70A 		vcmpe.f32	s0, s15
 168 001a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 169 001e 01DC     		bgt	.L10
 170 0020 B0EE670A 		vmov.f32	s0, s15
 171              	.L10:
 172              	.LVL13:
  68:moudels/algorithm/user_lib.c ****     {
  69:moudels/algorithm/user_lib.c ****         num = -Limit;
  70:moudels/algorithm/user_lib.c ****     }
  71:moudels/algorithm/user_lib.c ****     return num;
 173              		.loc 1 71 5 is_stmt 1 view .LVU40
  72:moudels/algorithm/user_lib.c **** }
 174              		.loc 1 72 1 is_stmt 0 view .LVU41
 175 0024 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE174:
 179              		.section	.text.sign,"ax",%progbits
 180              		.align	1
 181              		.global	sign
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 186              	sign:
 187              	.LVL14:
 188              	.LFB175:
  73:moudels/algorithm/user_lib.c **** 
  74:moudels/algorithm/user_lib.c **** // 判断符号位
  75:moudels/algorithm/user_lib.c **** float sign(float value)
  76:moudels/algorithm/user_lib.c **** {
 189              		.loc 1 76 1 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
  77:moudels/algorithm/user_lib.c ****     if (value >= 0.0f)
 194              		.loc 1 77 5 view .LVU43
 195              		.loc 1 77 8 is_stmt 0 view .LVU44
 196 0000 B5EEC00A 		vcmpe.f32	s0, #0
 197 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 198 0008 02DB     		blt	.L16
  78:moudels/algorithm/user_lib.c ****     {
  79:moudels/algorithm/user_lib.c ****         return 1.0f;
 199              		.loc 1 79 16 view .LVU45
 200 000a B7EE000A 		vmov.f32	s0, #1.0e+0
 201              	.LVL15:
 202              		.loc 1 79 16 view .LVU46
 203 000e 7047     		bx	lr
 204              	.LVL16:
 205              	.L16:
  80:moudels/algorithm/user_lib.c ****     }
  81:moudels/algorithm/user_lib.c ****     else
  82:moudels/algorithm/user_lib.c ****     {
  83:moudels/algorithm/user_lib.c ****         return -1.0f;
 206              		.loc 1 83 16 view .LVU47
 207 0010 BFEE000A 		vmov.f32	s0, #-1.0e+0
 208              	.LVL17:
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s 			page 6


  84:moudels/algorithm/user_lib.c ****     }
  85:moudels/algorithm/user_lib.c **** }
 209              		.loc 1 85 1 view .LVU48
 210 0014 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE175:
 214              		.section	.text.float_deadband,"ax",%progbits
 215              		.align	1
 216              		.global	float_deadband
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 221              	float_deadband:
 222              	.LVL18:
 223              	.LFB176:
  86:moudels/algorithm/user_lib.c **** 
  87:moudels/algorithm/user_lib.c **** // 浮点死区
  88:moudels/algorithm/user_lib.c **** float float_deadband(float Value, float minValue, float maxValue)
  89:moudels/algorithm/user_lib.c **** {
 224              		.loc 1 89 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
  90:moudels/algorithm/user_lib.c ****     if (Value < maxValue && Value > minValue)
 229              		.loc 1 90 5 view .LVU50
 230              		.loc 1 90 8 is_stmt 0 view .LVU51
 231 0000 B4EEC10A 		vcmpe.f32	s0, s2
 232 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 233 0008 06D5     		bpl	.L18
 234              		.loc 1 90 26 discriminator 1 view .LVU52
 235 000a B4EEE00A 		vcmpe.f32	s0, s1
 236 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 237 0012 01DD     		ble	.L18
  91:moudels/algorithm/user_lib.c ****     {
  92:moudels/algorithm/user_lib.c ****         Value = 0.0f;
 238              		.loc 1 92 15 view .LVU53
 239 0014 9FED010A 		vldr.32	s0, .L22
 240              	.LVL19:
 241              	.L18:
  93:moudels/algorithm/user_lib.c ****     }
  94:moudels/algorithm/user_lib.c ****     return Value;
 242              		.loc 1 94 5 is_stmt 1 view .LVU54
  95:moudels/algorithm/user_lib.c **** }
 243              		.loc 1 95 1 is_stmt 0 view .LVU55
 244 0018 7047     		bx	lr
 245              	.L23:
 246 001a 00BF     		.align	2
 247              	.L22:
 248 001c 00000000 		.word	0
 249              		.cfi_endproc
 250              	.LFE176:
 252              		.section	.text.float_constrain,"ax",%progbits
 253              		.align	1
 254              		.global	float_constrain
 255              		.syntax unified
 256              		.thumb
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s 			page 7


 257              		.thumb_func
 259              	float_constrain:
 260              	.LVL20:
 261              	.LFB177:
  96:moudels/algorithm/user_lib.c **** 
  97:moudels/algorithm/user_lib.c **** // 限幅函数
  98:moudels/algorithm/user_lib.c **** float float_constrain(float Value, float minValue, float maxValue)
  99:moudels/algorithm/user_lib.c **** {
 262              		.loc 1 99 1 is_stmt 1 view -0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 100:moudels/algorithm/user_lib.c ****     if (Value < minValue)
 267              		.loc 1 100 5 view .LVU57
 268              		.loc 1 100 8 is_stmt 0 view .LVU58
 269 0000 B4EEE00A 		vcmpe.f32	s0, s1
 270 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 271 0008 07D4     		bmi	.L27
 101:moudels/algorithm/user_lib.c ****         return minValue;
 102:moudels/algorithm/user_lib.c ****     else if (Value > maxValue)
 272              		.loc 1 102 10 is_stmt 1 view .LVU59
 273              		.loc 1 102 13 is_stmt 0 view .LVU60
 274 000a B4EEC10A 		vcmpe.f32	s0, s2
 275 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 276 0012 04DD     		ble	.L24
 103:moudels/algorithm/user_lib.c ****         return maxValue;
 277              		.loc 1 103 16 view .LVU61
 278 0014 B0EE410A 		vmov.f32	s0, s2
 279              	.LVL21:
 280              		.loc 1 103 16 view .LVU62
 281 0018 7047     		bx	lr
 282              	.LVL22:
 283              	.L27:
 101:moudels/algorithm/user_lib.c ****         return minValue;
 284              		.loc 1 101 16 view .LVU63
 285 001a B0EE600A 		vmov.f32	s0, s1
 286              	.LVL23:
 287              	.L24:
 104:moudels/algorithm/user_lib.c ****     else
 105:moudels/algorithm/user_lib.c ****         return Value;
 106:moudels/algorithm/user_lib.c **** }
 288              		.loc 1 106 1 view .LVU64
 289 001e 7047     		bx	lr
 290              		.cfi_endproc
 291              	.LFE177:
 293              		.section	.text.int16_constrain,"ax",%progbits
 294              		.align	1
 295              		.global	int16_constrain
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 300              	int16_constrain:
 301              	.LVL24:
 302              	.LFB178:
 107:moudels/algorithm/user_lib.c **** 
 108:moudels/algorithm/user_lib.c **** // 限幅函数
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s 			page 8


 109:moudels/algorithm/user_lib.c **** int16_t int16_constrain(int16_t Value, int16_t minValue, int16_t maxValue)
 110:moudels/algorithm/user_lib.c **** {
 303              		.loc 1 110 1 is_stmt 1 view -0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 111:moudels/algorithm/user_lib.c ****     if (Value < minValue)
 308              		.loc 1 111 5 view .LVU66
 309              		.loc 1 111 8 is_stmt 0 view .LVU67
 310 0000 8842     		cmp	r0, r1
 311 0002 03DB     		blt	.L33
 112:moudels/algorithm/user_lib.c ****         return minValue;
 113:moudels/algorithm/user_lib.c ****     else if (Value > maxValue)
 312              		.loc 1 113 10 is_stmt 1 view .LVU68
 313              		.loc 1 113 13 is_stmt 0 view .LVU69
 314 0004 9042     		cmp	r0, r2
 315 0006 02DD     		ble	.L32
 114:moudels/algorithm/user_lib.c ****         return maxValue;
 316              		.loc 1 114 16 view .LVU70
 317 0008 1046     		mov	r0, r2
 318              	.LVL25:
 319              		.loc 1 114 16 view .LVU71
 320 000a 7047     		bx	lr
 321              	.LVL26:
 322              	.L33:
 112:moudels/algorithm/user_lib.c ****         return minValue;
 323              		.loc 1 112 16 view .LVU72
 324 000c 0846     		mov	r0, r1
 325              	.LVL27:
 326              	.L32:
 115:moudels/algorithm/user_lib.c ****     else
 116:moudels/algorithm/user_lib.c ****         return Value;
 117:moudels/algorithm/user_lib.c **** }
 327              		.loc 1 117 1 view .LVU73
 328 000e 7047     		bx	lr
 329              		.cfi_endproc
 330              	.LFE178:
 332              		.section	.text.loop_float_constrain,"ax",%progbits
 333              		.align	1
 334              		.global	loop_float_constrain
 335              		.syntax unified
 336              		.thumb
 337              		.thumb_func
 339              	loop_float_constrain:
 340              	.LVL28:
 341              	.LFB179:
 118:moudels/algorithm/user_lib.c **** 
 119:moudels/algorithm/user_lib.c **** // 循环限幅函数
 120:moudels/algorithm/user_lib.c **** float loop_float_constrain(float Input, float minValue, float maxValue)
 121:moudels/algorithm/user_lib.c **** {
 342              		.loc 1 121 1 is_stmt 1 view -0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              		@ link register save eliminated.
 122:moudels/algorithm/user_lib.c ****     if (maxValue < minValue)
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s 			page 9


 347              		.loc 1 122 5 view .LVU75
 348              		.loc 1 122 8 is_stmt 0 view .LVU76
 349 0000 B4EEE01A 		vcmpe.f32	s2, s1
 350 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 351 0008 1ED4     		bmi	.L36
 123:moudels/algorithm/user_lib.c ****     {
 124:moudels/algorithm/user_lib.c ****         return Input;
 125:moudels/algorithm/user_lib.c ****     }
 126:moudels/algorithm/user_lib.c **** 
 127:moudels/algorithm/user_lib.c ****     if (Input > maxValue)
 352              		.loc 1 127 5 is_stmt 1 view .LVU77
 353              		.loc 1 127 8 is_stmt 0 view .LVU78
 354 000a B4EEC01A 		vcmpe.f32	s2, s0
 355 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 356 0012 0AD5     		bpl	.L46
 357              	.LBB2:
 128:moudels/algorithm/user_lib.c ****     {
 129:moudels/algorithm/user_lib.c ****         float len = maxValue - minValue;
 358              		.loc 1 129 9 is_stmt 1 view .LVU79
 359              		.loc 1 129 15 is_stmt 0 view .LVU80
 360 0014 71EE600A 		vsub.f32	s1, s2, s1
 361              	.LVL29:
 130:moudels/algorithm/user_lib.c ****         while (Input > maxValue)
 362              		.loc 1 130 9 is_stmt 1 view .LVU81
 363              		.loc 1 130 15 is_stmt 0 view .LVU82
 364 0018 01E0     		b	.L39
 365              	.L40:
 131:moudels/algorithm/user_lib.c ****         {
 132:moudels/algorithm/user_lib.c ****             Input -= len;
 366              		.loc 1 132 13 is_stmt 1 view .LVU83
 367              		.loc 1 132 19 is_stmt 0 view .LVU84
 368 001a 30EE600A 		vsub.f32	s0, s0, s1
 369              	.LVL30:
 370              	.L39:
 130:moudels/algorithm/user_lib.c ****         while (Input > maxValue)
 371              		.loc 1 130 22 is_stmt 1 view .LVU85
 372 001e B4EEC10A 		vcmpe.f32	s0, s2
 373 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 374 0026 F8DC     		bgt	.L40
 130:moudels/algorithm/user_lib.c ****         while (Input > maxValue)
 375              		.loc 1 130 22 is_stmt 0 view .LVU86
 376 0028 7047     		bx	lr
 377              	.LVL31:
 378              	.L46:
 130:moudels/algorithm/user_lib.c ****         while (Input > maxValue)
 379              		.loc 1 130 22 view .LVU87
 380              	.LBE2:
 133:moudels/algorithm/user_lib.c ****         }
 134:moudels/algorithm/user_lib.c ****     }
 135:moudels/algorithm/user_lib.c ****     else if (Input < minValue)
 381              		.loc 1 135 10 is_stmt 1 view .LVU88
 382              		.loc 1 135 13 is_stmt 0 view .LVU89
 383 002a F4EEC00A 		vcmpe.f32	s1, s0
 384 002e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 385 0032 09DD     		ble	.L36
 386              	.LBB3:
 136:moudels/algorithm/user_lib.c ****     {
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s 			page 10


 137:moudels/algorithm/user_lib.c ****         float len = maxValue - minValue;
 387              		.loc 1 137 9 is_stmt 1 view .LVU90
 388              		.loc 1 137 15 is_stmt 0 view .LVU91
 389 0034 31EE601A 		vsub.f32	s2, s2, s1
 390              	.LVL32:
 138:moudels/algorithm/user_lib.c ****         while (Input < minValue)
 391              		.loc 1 138 9 is_stmt 1 view .LVU92
 392              	.L42:
 393              		.loc 1 138 22 view .LVU93
 394 0038 B4EEE00A 		vcmpe.f32	s0, s1
 395 003c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 396 0040 02D5     		bpl	.L36
 139:moudels/algorithm/user_lib.c ****         {
 140:moudels/algorithm/user_lib.c ****             Input += len;
 397              		.loc 1 140 13 view .LVU94
 398              		.loc 1 140 19 is_stmt 0 view .LVU95
 399 0042 30EE010A 		vadd.f32	s0, s0, s2
 400              	.LVL33:
 401              		.loc 1 140 19 view .LVU96
 402 0046 F7E7     		b	.L42
 403              	.LVL34:
 404              	.L36:
 405              		.loc 1 140 19 view .LVU97
 406              	.LBE3:
 141:moudels/algorithm/user_lib.c ****         }
 142:moudels/algorithm/user_lib.c ****     }
 143:moudels/algorithm/user_lib.c ****     return Input;
 144:moudels/algorithm/user_lib.c **** }
 407              		.loc 1 144 1 view .LVU98
 408 0048 7047     		bx	lr
 409              		.cfi_endproc
 410              	.LFE179:
 412              		.section	.text.theta_format,"ax",%progbits
 413              		.align	1
 414              		.global	theta_format
 415              		.syntax unified
 416              		.thumb
 417              		.thumb_func
 419              	theta_format:
 420              	.LVL35:
 421              	.LFB180:
 145:moudels/algorithm/user_lib.c **** 
 146:moudels/algorithm/user_lib.c **** // 弧度格式化为-PI~PI
 147:moudels/algorithm/user_lib.c **** 
 148:moudels/algorithm/user_lib.c **** // 角度格式化为-180~180
 149:moudels/algorithm/user_lib.c **** float theta_format(float Ang)
 150:moudels/algorithm/user_lib.c **** {
 422              		.loc 1 150 1 is_stmt 1 view -0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              		.loc 1 150 1 is_stmt 0 view .LVU100
 427 0000 08B5     		push	{r3, lr}
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 3, -8
 430              		.cfi_offset 14, -4
 151:moudels/algorithm/user_lib.c ****     return loop_float_constrain(Ang, -180.0f, 180.0f);
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s 			page 11


 431              		.loc 1 151 5 is_stmt 1 view .LVU101
 432              		.loc 1 151 12 is_stmt 0 view .LVU102
 433 0002 9FED031A 		vldr.32	s2, .L49
 434 0006 DFED030A 		vldr.32	s1, .L49+4
 435 000a FFF7FEFF 		bl	loop_float_constrain
 436              	.LVL36:
 152:moudels/algorithm/user_lib.c **** }
 437              		.loc 1 152 1 view .LVU103
 438 000e 08BD     		pop	{r3, pc}
 439              	.L50:
 440              		.align	2
 441              	.L49:
 442 0010 00003443 		.word	1127481344
 443 0014 000034C3 		.word	-1020002304
 444              		.cfi_endproc
 445              	.LFE180:
 447              		.section	.text.float_rounding,"ax",%progbits
 448              		.align	1
 449              		.global	float_rounding
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 454              	float_rounding:
 455              	.LVL37:
 456              	.LFB181:
 153:moudels/algorithm/user_lib.c **** 
 154:moudels/algorithm/user_lib.c **** int float_rounding(float raw)
 155:moudels/algorithm/user_lib.c **** {
 457              		.loc 1 155 1 is_stmt 1 view -0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 156:moudels/algorithm/user_lib.c ****     static int integer;
 462              		.loc 1 156 5 view .LVU105
 157:moudels/algorithm/user_lib.c ****     static float decimal;
 463              		.loc 1 157 5 view .LVU106
 158:moudels/algorithm/user_lib.c ****     integer = (int)raw;
 464              		.loc 1 158 5 view .LVU107
 465              		.loc 1 158 15 is_stmt 0 view .LVU108
 466 0000 FDEEC07A 		vcvt.s32.f32	s15, s0
 467              		.loc 1 158 13 view .LVU109
 468 0004 0C4B     		ldr	r3, .L55
 469 0006 C3ED007A 		vstr.32	s15, [r3]	@ int
 159:moudels/algorithm/user_lib.c ****     decimal = raw - integer;
 470              		.loc 1 159 5 is_stmt 1 view .LVU110
 471              		.loc 1 159 19 is_stmt 0 view .LVU111
 472 000a B8EEE77A 		vcvt.f32.s32	s14, s15
 473 000e 30EE470A 		vsub.f32	s0, s0, s14
 474              	.LVL38:
 475              		.loc 1 159 13 view .LVU112
 476 0012 0A4B     		ldr	r3, .L55+4
 477 0014 83ED000A 		vstr.32	s0, [r3]
 160:moudels/algorithm/user_lib.c ****     if (decimal > 0.5f)
 478              		.loc 1 160 5 is_stmt 1 view .LVU113
 479              		.loc 1 160 8 is_stmt 0 view .LVU114
 480 0018 B6EE007A 		vmov.f32	s14, #5.0e-1
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s 			page 12


 481 001c B4EEC70A 		vcmpe.f32	s0, s14
 482 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 483 0024 04DD     		ble	.L52
 161:moudels/algorithm/user_lib.c ****         integer++;
 484              		.loc 1 161 9 is_stmt 1 view .LVU115
 485              		.loc 1 161 16 is_stmt 0 view .LVU116
 486 0026 17EE903A 		vmov	r3, s15	@ int
 487 002a 0133     		adds	r3, r3, #1
 488 002c 024A     		ldr	r2, .L55
 489 002e 1360     		str	r3, [r2]
 490              	.L52:
 162:moudels/algorithm/user_lib.c ****     return integer;
 491              		.loc 1 162 5 is_stmt 1 view .LVU117
 163:moudels/algorithm/user_lib.c **** }
 492              		.loc 1 163 1 is_stmt 0 view .LVU118
 493 0030 014B     		ldr	r3, .L55
 494 0032 1868     		ldr	r0, [r3]
 495 0034 7047     		bx	lr
 496              	.L56:
 497 0036 00BF     		.align	2
 498              	.L55:
 499 0038 00000000 		.word	integer.1
 500 003c 00000000 		.word	decimal.0
 501              		.cfi_endproc
 502              	.LFE181:
 504              		.section	.text.Norm3d,"ax",%progbits
 505              		.align	1
 506              		.global	Norm3d
 507              		.syntax unified
 508              		.thumb
 509              		.thumb_func
 511              	Norm3d:
 512              	.LVL39:
 513              	.LFB182:
 164:moudels/algorithm/user_lib.c **** 
 165:moudels/algorithm/user_lib.c **** // 三维向量归一化
 166:moudels/algorithm/user_lib.c **** float *Norm3d(float *v)
 167:moudels/algorithm/user_lib.c **** {
 514              		.loc 1 167 1 is_stmt 1 view -0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              		.loc 1 167 1 is_stmt 0 view .LVU120
 519 0000 10B5     		push	{r4, lr}
 520              		.cfi_def_cfa_offset 8
 521              		.cfi_offset 4, -8
 522              		.cfi_offset 14, -4
 523 0002 2DED048B 		vpush.64	{d8, d9}
 524              		.cfi_def_cfa_offset 24
 525              		.cfi_offset 80, -24
 526              		.cfi_offset 81, -20
 527              		.cfi_offset 82, -16
 528              		.cfi_offset 83, -12
 529 0006 0446     		mov	r4, r0
 168:moudels/algorithm/user_lib.c ****     float len = Sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);
 530              		.loc 1 168 5 is_stmt 1 view .LVU121
 531              		.loc 1 168 23 is_stmt 0 view .LVU122
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s 			page 13


 532 0008 90ED009A 		vldr.32	s18, [r0]
 533              		.loc 1 168 27 view .LVU123
 534 000c 69EE097A 		vmul.f32	s15, s18, s18
 535              		.loc 1 168 37 view .LVU124
 536 0010 D0ED018A 		vldr.32	s17, [r0, #4]
 537              		.loc 1 168 41 view .LVU125
 538 0014 28EEA87A 		vmul.f32	s14, s17, s17
 539              		.loc 1 168 34 view .LVU126
 540 0018 77EE877A 		vadd.f32	s15, s15, s14
 541              		.loc 1 168 51 view .LVU127
 542 001c 90ED028A 		vldr.32	s16, [r0, #8]
 543              		.loc 1 168 55 view .LVU128
 544 0020 28EE080A 		vmul.f32	s0, s16, s16
 545              		.loc 1 168 17 view .LVU129
 546 0024 37EE800A 		vadd.f32	s0, s15, s0
 547 0028 FFF7FEFF 		bl	Sqrt
 548              	.LVL40:
 169:moudels/algorithm/user_lib.c ****     v[0] /= len;
 549              		.loc 1 169 5 is_stmt 1 view .LVU130
 550              		.loc 1 169 10 is_stmt 0 view .LVU131
 551 002c C9EE007A 		vdiv.f32	s15, s18, s0
 552 0030 C4ED007A 		vstr.32	s15, [r4]
 170:moudels/algorithm/user_lib.c ****     v[1] /= len;
 553              		.loc 1 170 5 is_stmt 1 view .LVU132
 554              		.loc 1 170 10 is_stmt 0 view .LVU133
 555 0034 C8EE807A 		vdiv.f32	s15, s17, s0
 556 0038 C4ED017A 		vstr.32	s15, [r4, #4]
 171:moudels/algorithm/user_lib.c ****     v[2] /= len;
 557              		.loc 1 171 5 is_stmt 1 view .LVU134
 558              		.loc 1 171 10 is_stmt 0 view .LVU135
 559 003c C8EE007A 		vdiv.f32	s15, s16, s0
 560 0040 C4ED027A 		vstr.32	s15, [r4, #8]
 172:moudels/algorithm/user_lib.c ****     return v;
 561              		.loc 1 172 5 is_stmt 1 view .LVU136
 173:moudels/algorithm/user_lib.c **** }
 562              		.loc 1 173 1 is_stmt 0 view .LVU137
 563 0044 2046     		mov	r0, r4
 564 0046 BDEC048B 		vldm	sp!, {d8-d9}
 565              		.cfi_restore 82
 566              		.cfi_restore 83
 567              		.cfi_restore 80
 568              		.cfi_restore 81
 569              		.cfi_def_cfa_offset 8
 570 004a 10BD     		pop	{r4, pc}
 571              		.loc 1 173 1 view .LVU138
 572              		.cfi_endproc
 573              	.LFE182:
 575              		.section	.text.NormOf3d,"ax",%progbits
 576              		.align	1
 577              		.global	NormOf3d
 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 582              	NormOf3d:
 583              	.LVL41:
 584              	.LFB183:
 174:moudels/algorithm/user_lib.c **** 
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s 			page 14


 175:moudels/algorithm/user_lib.c **** // 计算模长
 176:moudels/algorithm/user_lib.c **** float NormOf3d(float *v)
 177:moudels/algorithm/user_lib.c **** {
 585              		.loc 1 177 1 is_stmt 1 view -0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589              		.loc 1 177 1 is_stmt 0 view .LVU140
 590 0000 08B5     		push	{r3, lr}
 591              		.cfi_def_cfa_offset 8
 592              		.cfi_offset 3, -8
 593              		.cfi_offset 14, -4
 178:moudels/algorithm/user_lib.c ****     return Sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);
 594              		.loc 1 178 5 is_stmt 1 view .LVU141
 595              		.loc 1 178 18 is_stmt 0 view .LVU142
 596 0002 90ED000A 		vldr.32	s0, [r0]
 597              		.loc 1 178 22 view .LVU143
 598 0006 20EE000A 		vmul.f32	s0, s0, s0
 599              		.loc 1 178 32 view .LVU144
 600 000a D0ED017A 		vldr.32	s15, [r0, #4]
 601              		.loc 1 178 36 view .LVU145
 602 000e 67EEA77A 		vmul.f32	s15, s15, s15
 603              		.loc 1 178 29 view .LVU146
 604 0012 70EE277A 		vadd.f32	s15, s0, s15
 605              		.loc 1 178 46 view .LVU147
 606 0016 90ED020A 		vldr.32	s0, [r0, #8]
 607              		.loc 1 178 50 view .LVU148
 608 001a 20EE000A 		vmul.f32	s0, s0, s0
 609              		.loc 1 178 12 view .LVU149
 610 001e 37EE800A 		vadd.f32	s0, s15, s0
 611 0022 FFF7FEFF 		bl	Sqrt
 612              	.LVL42:
 179:moudels/algorithm/user_lib.c **** }
 613              		.loc 1 179 1 view .LVU150
 614 0026 08BD     		pop	{r3, pc}
 615              		.cfi_endproc
 616              	.LFE183:
 618              		.section	.text.Cross3d,"ax",%progbits
 619              		.align	1
 620              		.global	Cross3d
 621              		.syntax unified
 622              		.thumb
 623              		.thumb_func
 625              	Cross3d:
 626              	.LVL43:
 627              	.LFB184:
 180:moudels/algorithm/user_lib.c **** 
 181:moudels/algorithm/user_lib.c **** // 三维向量叉乘v1 x v2
 182:moudels/algorithm/user_lib.c **** void Cross3d(float *v1, float *v2, float *res)
 183:moudels/algorithm/user_lib.c **** {
 628              		.loc 1 183 1 is_stmt 1 view -0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 184:moudels/algorithm/user_lib.c ****     res[0] = v1[1] * v2[2] - v1[2] * v2[1];
 633              		.loc 1 184 5 view .LVU152
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s 			page 15


 634              		.loc 1 184 16 is_stmt 0 view .LVU153
 635 0000 D0ED017A 		vldr.32	s15, [r0, #4]
 636              		.loc 1 184 24 view .LVU154
 637 0004 91ED027A 		vldr.32	s14, [r1, #8]
 638              		.loc 1 184 20 view .LVU155
 639 0008 67EE877A 		vmul.f32	s15, s15, s14
 640              		.loc 1 184 32 view .LVU156
 641 000c 90ED027A 		vldr.32	s14, [r0, #8]
 642              		.loc 1 184 40 view .LVU157
 643 0010 D1ED016A 		vldr.32	s13, [r1, #4]
 644              		.loc 1 184 36 view .LVU158
 645 0014 27EE267A 		vmul.f32	s14, s14, s13
 646              		.loc 1 184 28 view .LVU159
 647 0018 77EEC77A 		vsub.f32	s15, s15, s14
 648              		.loc 1 184 12 view .LVU160
 649 001c C2ED007A 		vstr.32	s15, [r2]
 185:moudels/algorithm/user_lib.c ****     res[1] = v1[2] * v2[0] - v1[0] * v2[2];
 650              		.loc 1 185 5 is_stmt 1 view .LVU161
 651              		.loc 1 185 16 is_stmt 0 view .LVU162
 652 0020 D0ED027A 		vldr.32	s15, [r0, #8]
 653              		.loc 1 185 24 view .LVU163
 654 0024 91ED007A 		vldr.32	s14, [r1]
 655              		.loc 1 185 20 view .LVU164
 656 0028 67EE877A 		vmul.f32	s15, s15, s14
 657              		.loc 1 185 32 view .LVU165
 658 002c 90ED007A 		vldr.32	s14, [r0]
 659              		.loc 1 185 40 view .LVU166
 660 0030 D1ED026A 		vldr.32	s13, [r1, #8]
 661              		.loc 1 185 36 view .LVU167
 662 0034 27EE267A 		vmul.f32	s14, s14, s13
 663              		.loc 1 185 28 view .LVU168
 664 0038 77EEC77A 		vsub.f32	s15, s15, s14
 665              		.loc 1 185 12 view .LVU169
 666 003c C2ED017A 		vstr.32	s15, [r2, #4]
 186:moudels/algorithm/user_lib.c ****     res[2] = v1[0] * v2[1] - v1[1] * v2[0];
 667              		.loc 1 186 5 is_stmt 1 view .LVU170
 668              		.loc 1 186 16 is_stmt 0 view .LVU171
 669 0040 D0ED007A 		vldr.32	s15, [r0]
 670              		.loc 1 186 24 view .LVU172
 671 0044 91ED017A 		vldr.32	s14, [r1, #4]
 672              		.loc 1 186 20 view .LVU173
 673 0048 67EE877A 		vmul.f32	s15, s15, s14
 674              		.loc 1 186 32 view .LVU174
 675 004c 90ED017A 		vldr.32	s14, [r0, #4]
 676              		.loc 1 186 40 view .LVU175
 677 0050 D1ED006A 		vldr.32	s13, [r1]
 678              		.loc 1 186 36 view .LVU176
 679 0054 27EE267A 		vmul.f32	s14, s14, s13
 680              		.loc 1 186 28 view .LVU177
 681 0058 77EEC77A 		vsub.f32	s15, s15, s14
 682              		.loc 1 186 12 view .LVU178
 683 005c C2ED027A 		vstr.32	s15, [r2, #8]
 187:moudels/algorithm/user_lib.c **** }
 684              		.loc 1 187 1 view .LVU179
 685 0060 7047     		bx	lr
 686              		.cfi_endproc
 687              	.LFE184:
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s 			page 16


 689              		.section	.text.Dot3d,"ax",%progbits
 690              		.align	1
 691              		.global	Dot3d
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 696              	Dot3d:
 697              	.LVL44:
 698              	.LFB185:
 188:moudels/algorithm/user_lib.c **** 
 189:moudels/algorithm/user_lib.c **** // 三维向量点乘
 190:moudels/algorithm/user_lib.c **** float Dot3d(float *v1, float *v2)
 191:moudels/algorithm/user_lib.c **** {
 699              		.loc 1 191 1 is_stmt 1 view -0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703              		@ link register save eliminated.
 192:moudels/algorithm/user_lib.c ****     return v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];
 704              		.loc 1 192 5 view .LVU181
 705              		.loc 1 192 14 is_stmt 0 view .LVU182
 706 0000 D0ED007A 		vldr.32	s15, [r0]
 707              		.loc 1 192 22 view .LVU183
 708 0004 91ED007A 		vldr.32	s14, [r1]
 709              		.loc 1 192 18 view .LVU184
 710 0008 67EE877A 		vmul.f32	s15, s15, s14
 711              		.loc 1 192 30 view .LVU185
 712 000c 90ED017A 		vldr.32	s14, [r0, #4]
 713              		.loc 1 192 38 view .LVU186
 714 0010 D1ED016A 		vldr.32	s13, [r1, #4]
 715              		.loc 1 192 34 view .LVU187
 716 0014 27EE267A 		vmul.f32	s14, s14, s13
 717              		.loc 1 192 26 view .LVU188
 718 0018 77EE877A 		vadd.f32	s15, s15, s14
 719              		.loc 1 192 46 view .LVU189
 720 001c 90ED020A 		vldr.32	s0, [r0, #8]
 721              		.loc 1 192 54 view .LVU190
 722 0020 91ED027A 		vldr.32	s14, [r1, #8]
 723              		.loc 1 192 50 view .LVU191
 724 0024 20EE070A 		vmul.f32	s0, s0, s14
 193:moudels/algorithm/user_lib.c **** }
 725              		.loc 1 193 1 view .LVU192
 726 0028 37EE800A 		vadd.f32	s0, s15, s0
 727 002c 7047     		bx	lr
 728              		.cfi_endproc
 729              	.LFE185:
 731              		.section	.text.AverageFilter,"ax",%progbits
 732              		.align	1
 733              		.global	AverageFilter
 734              		.syntax unified
 735              		.thumb
 736              		.thumb_func
 738              	AverageFilter:
 739              	.LVL45:
 740              	.LFB186:
 194:moudels/algorithm/user_lib.c **** 
 195:moudels/algorithm/user_lib.c **** // 均值滤波,删除buffer中的最后一个元素,填入新的元素并求平均值
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s 			page 17


 196:moudels/algorithm/user_lib.c **** float AverageFilter(float new_data, float *buf, uint8_t len)
 197:moudels/algorithm/user_lib.c **** {
 741              		.loc 1 197 1 is_stmt 1 view -0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 745              		@ link register save eliminated.
 198:moudels/algorithm/user_lib.c ****     float sum = 0;
 746              		.loc 1 198 5 view .LVU194
 199:moudels/algorithm/user_lib.c ****     for (uint8_t i = 0; i < len - 1; i++)
 747              		.loc 1 199 5 view .LVU195
 748              	.LBB4:
 749              		.loc 1 199 10 view .LVU196
 750              		.loc 1 199 18 is_stmt 0 view .LVU197
 751 0000 0023     		movs	r3, #0
 752              	.LBE4:
 198:moudels/algorithm/user_lib.c ****     float sum = 0;
 753              		.loc 1 198 11 view .LVU198
 754 0002 9FED117A 		vldr.32	s14, .L66
 755              	.LBB5:
 756              		.loc 1 199 5 view .LVU199
 757 0006 0BE0     		b	.L64
 758              	.LVL46:
 759              	.L65:
 200:moudels/algorithm/user_lib.c ****     {
 201:moudels/algorithm/user_lib.c ****         buf[i] = buf[i + 1];
 760              		.loc 1 201 9 is_stmt 1 view .LVU200
 761              		.loc 1 201 12 is_stmt 0 view .LVU201
 762 0008 00EB8302 		add	r2, r0, r3, lsl #2
 763              		.loc 1 201 21 view .LVU202
 764 000c 0133     		adds	r3, r3, #1
 765              	.LVL47:
 766              		.loc 1 201 21 view .LVU203
 767 000e 00EB830C 		add	ip, r0, r3, lsl #2
 768 0012 DCED007A 		vldr.32	s15, [ip]
 769              		.loc 1 201 16 view .LVU204
 770 0016 C2ED007A 		vstr.32	s15, [r2]
 202:moudels/algorithm/user_lib.c ****         sum += buf[i];
 771              		.loc 1 202 9 is_stmt 1 view .LVU205
 772              		.loc 1 202 13 is_stmt 0 view .LVU206
 773 001a 37EE277A 		vadd.f32	s14, s14, s15
 774              	.LVL48:
 199:moudels/algorithm/user_lib.c ****     for (uint8_t i = 0; i < len - 1; i++)
 775              		.loc 1 199 39 is_stmt 1 discriminator 3 view .LVU207
 776 001e DBB2     		uxtb	r3, r3
 777              	.LVL49:
 778              	.L64:
 199:moudels/algorithm/user_lib.c ****     for (uint8_t i = 0; i < len - 1; i++)
 779              		.loc 1 199 27 discriminator 1 view .LVU208
 199:moudels/algorithm/user_lib.c ****     for (uint8_t i = 0; i < len - 1; i++)
 780              		.loc 1 199 33 is_stmt 0 discriminator 1 view .LVU209
 781 0020 4A1E     		subs	r2, r1, #1
 199:moudels/algorithm/user_lib.c ****     for (uint8_t i = 0; i < len - 1; i++)
 782              		.loc 1 199 27 discriminator 1 view .LVU210
 783 0022 9342     		cmp	r3, r2
 784 0024 F0DB     		blt	.L65
 785              	.LBE5:
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s 			page 18


 203:moudels/algorithm/user_lib.c ****     }
 204:moudels/algorithm/user_lib.c ****     buf[len - 1] = new_data;
 786              		.loc 1 204 5 is_stmt 1 view .LVU211
 787              		.loc 1 204 8 is_stmt 0 view .LVU212
 788 0026 01F18043 		add	r3, r1, #1073741824
 789              	.LVL50:
 790              		.loc 1 204 8 view .LVU213
 791 002a 013B     		subs	r3, r3, #1
 792 002c 00EB8300 		add	r0, r0, r3, lsl #2
 793              	.LVL51:
 794              		.loc 1 204 18 view .LVU214
 795 0030 80ED000A 		vstr.32	s0, [r0]
 205:moudels/algorithm/user_lib.c ****     sum += new_data;
 796              		.loc 1 205 5 is_stmt 1 view .LVU215
 797              		.loc 1 205 9 is_stmt 0 view .LVU216
 798 0034 37EE007A 		vadd.f32	s14, s14, s0
 799              	.LVL52:
 206:moudels/algorithm/user_lib.c ****     return sum / len;
 800              		.loc 1 206 5 is_stmt 1 view .LVU217
 801              		.loc 1 206 16 is_stmt 0 view .LVU218
 802 0038 07EE901A 		vmov	s15, r1	@ int
 803 003c B8EEE70A 		vcvt.f32.s32	s0, s15
 804              	.LVL53:
 207:moudels/algorithm/user_lib.c **** }
 805              		.loc 1 207 1 view .LVU219
 806 0040 87EE000A 		vdiv.f32	s0, s14, s0
 807 0044 7047     		bx	lr
 808              	.L67:
 809 0046 00BF     		.align	2
 810              	.L66:
 811 0048 00000000 		.word	0
 812              		.cfi_endproc
 813              	.LFE186:
 815              		.section	.text.MatInit,"ax",%progbits
 816              		.align	1
 817              		.global	MatInit
 818              		.syntax unified
 819              		.thumb
 820              		.thumb_func
 822              	MatInit:
 823              	.LVL54:
 824              	.LFB187:
 208:moudels/algorithm/user_lib.c **** 
 209:moudels/algorithm/user_lib.c **** void MatInit(mat *m, uint8_t row, uint8_t col)
 210:moudels/algorithm/user_lib.c **** {
 825              		.loc 1 210 1 is_stmt 1 view -0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 0
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 829              		.loc 1 210 1 is_stmt 0 view .LVU221
 830 0000 10B5     		push	{r4, lr}
 831              		.cfi_def_cfa_offset 8
 832              		.cfi_offset 4, -8
 833              		.cfi_offset 14, -4
 834 0002 0446     		mov	r4, r0
 211:moudels/algorithm/user_lib.c ****     m->numCols = col;
 835              		.loc 1 211 5 is_stmt 1 view .LVU222
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s 			page 19


 836              		.loc 1 211 16 is_stmt 0 view .LVU223
 837 0004 4280     		strh	r2, [r0, #2]	@ movhi
 212:moudels/algorithm/user_lib.c ****     m->numRows = row;
 838              		.loc 1 212 5 is_stmt 1 view .LVU224
 839              		.loc 1 212 16 is_stmt 0 view .LVU225
 840 0006 0180     		strh	r1, [r0]	@ movhi
 213:moudels/algorithm/user_lib.c ****     m->pData = (float *)zmalloc(row * col * sizeof(float));
 841              		.loc 1 213 5 is_stmt 1 view .LVU226
 842              		.loc 1 213 37 is_stmt 0 view .LVU227
 843 0008 02FB01F1 		mul	r1, r2, r1
 844              	.LVL55:
 845              		.loc 1 213 25 view .LVU228
 846 000c 8800     		lsls	r0, r1, #2
 847              	.LVL56:
 848              		.loc 1 213 25 view .LVU229
 849 000e FFF7FEFF 		bl	zmalloc
 850              	.LVL57:
 851              		.loc 1 213 14 discriminator 1 view .LVU230
 852 0012 6060     		str	r0, [r4, #4]
 214:moudels/algorithm/user_lib.c **** }
 853              		.loc 1 214 1 view .LVU231
 854 0014 10BD     		pop	{r4, pc}
 855              		.loc 1 214 1 view .LVU232
 856              		.cfi_endproc
 857              	.LFE187:
 859              		.section	.bss.decimal.0,"aw",%nobits
 860              		.align	2
 863              	decimal.0:
 864 0000 00000000 		.space	4
 865              		.section	.bss.integer.1,"aw",%nobits
 866              		.align	2
 869              	integer.1:
 870 0000 00000000 		.space	4
 871              		.text
 872              	.Letext0:
 873              		.file 2 "C:/Users/Sive/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-too
 874              		.file 3 "C:/Users/Sive/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-too
 875              		.file 4 "C:/Users/Sive/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-too
 876              		.file 5 "Middlewares/ST/ARM/DSP/Inc/arm_math.h"
 877              		.file 6 "C:/Users/Sive/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-too
 878              		.file 7 "C:/Users/Sive/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-too
 879              		.file 8 "moudels/algorithm/user_lib.h"
 880              		.file 9 "<built-in>"
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 user_lib.c
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:21     .text.zmalloc:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:27     .text.zmalloc:00000000 zmalloc
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:63     .text.Sqrt:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:69     .text.Sqrt:00000000 Sqrt
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:134    .text.Sqrt:00000054 $d
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:140    .text.abs_limit:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:146    .text.abs_limit:00000000 abs_limit
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:180    .text.sign:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:186    .text.sign:00000000 sign
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:215    .text.float_deadband:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:221    .text.float_deadband:00000000 float_deadband
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:248    .text.float_deadband:0000001c $d
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:253    .text.float_constrain:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:259    .text.float_constrain:00000000 float_constrain
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:294    .text.int16_constrain:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:300    .text.int16_constrain:00000000 int16_constrain
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:333    .text.loop_float_constrain:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:339    .text.loop_float_constrain:00000000 loop_float_constrain
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:413    .text.theta_format:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:419    .text.theta_format:00000000 theta_format
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:442    .text.theta_format:00000010 $d
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:448    .text.float_rounding:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:454    .text.float_rounding:00000000 float_rounding
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:499    .text.float_rounding:00000038 $d
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:869    .bss.integer.1:00000000 integer.1
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:863    .bss.decimal.0:00000000 decimal.0
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:505    .text.Norm3d:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:511    .text.Norm3d:00000000 Norm3d
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:576    .text.NormOf3d:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:582    .text.NormOf3d:00000000 NormOf3d
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:619    .text.Cross3d:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:625    .text.Cross3d:00000000 Cross3d
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:690    .text.Dot3d:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:696    .text.Dot3d:00000000 Dot3d
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:732    .text.AverageFilter:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:738    .text.AverageFilter:00000000 AverageFilter
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:811    .text.AverageFilter:00000048 $d
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:816    .text.MatInit:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:822    .text.MatInit:00000000 MatInit
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:860    .bss.decimal.0:00000000 $d
C:\Users\Sive\AppData\Local\Temp\ccxfkMoX.s:866    .bss.integer.1:00000000 $d

UNDEFINED SYMBOLS
malloc
memset
