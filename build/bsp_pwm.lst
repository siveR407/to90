ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"bsp_pwm.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "bsp/pwm/bsp_pwm.c"
  20              		.section	.text.PWMSelectTclk,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	PWMSelectTclk:
  27              	.LVL0:
  28              	.LFB141:
   1:bsp/pwm/bsp_pwm.c **** #include "bsp_pwm.h"
   2:bsp/pwm/bsp_pwm.c **** #include "stdlib.h"
   3:bsp/pwm/bsp_pwm.c **** #include "memory.h"
   4:bsp/pwm/bsp_pwm.c **** 
   5:bsp/pwm/bsp_pwm.c **** // 配合中断以及初始化
   6:bsp/pwm/bsp_pwm.c **** static uint8_t idx;
   7:bsp/pwm/bsp_pwm.c **** static PWMInstance *pwm_instance[PWM_DEVICE_CNT] = {NULL}; // 所有的pwm instance保存于此,用
   8:bsp/pwm/bsp_pwm.c **** static uint32_t PWMSelectTclk(TIM_HandleTypeDef *htim );
   9:bsp/pwm/bsp_pwm.c **** /**
  10:bsp/pwm/bsp_pwm.c ****  * @brief pwm dma传输完成回调函数
  11:bsp/pwm/bsp_pwm.c ****  *
  12:bsp/pwm/bsp_pwm.c ****  * @param htim 发生中断的定时器句柄
  13:bsp/pwm/bsp_pwm.c ****  */
  14:bsp/pwm/bsp_pwm.c **** void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
  15:bsp/pwm/bsp_pwm.c **** {
  16:bsp/pwm/bsp_pwm.c ****     for (uint8_t i = 0; i < idx; i++)
  17:bsp/pwm/bsp_pwm.c ****     { // 来自同一个定时器的中断且通道相同
  18:bsp/pwm/bsp_pwm.c ****         if (pwm_instance[i]->htim == htim && htim->Channel == (1<<(pwm_instance[i]->channel/4)))
  19:bsp/pwm/bsp_pwm.c ****         {
  20:bsp/pwm/bsp_pwm.c ****             if (pwm_instance[i]->callback) // 如果有回调函数
  21:bsp/pwm/bsp_pwm.c ****                 pwm_instance[i]->callback(pwm_instance[i]);
  22:bsp/pwm/bsp_pwm.c ****             return; // 一次只能有一个通道的中断,所以直接返回
  23:bsp/pwm/bsp_pwm.c ****         }
  24:bsp/pwm/bsp_pwm.c ****     }
  25:bsp/pwm/bsp_pwm.c **** }
  26:bsp/pwm/bsp_pwm.c **** 
  27:bsp/pwm/bsp_pwm.c **** PWMInstance *PWMRegister(PWM_Init_Config_s *config)
  28:bsp/pwm/bsp_pwm.c **** {
  29:bsp/pwm/bsp_pwm.c ****     if (idx >= PWM_DEVICE_CNT) // 超过最大实例数,考虑增加或查看是否有内存泄漏
  30:bsp/pwm/bsp_pwm.c ****         while (1)
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s 			page 2


  31:bsp/pwm/bsp_pwm.c ****             ;
  32:bsp/pwm/bsp_pwm.c ****     PWMInstance *pwm = (PWMInstance *)malloc(sizeof(PWMInstance));
  33:bsp/pwm/bsp_pwm.c ****     memset(pwm, 0, sizeof(PWMInstance));
  34:bsp/pwm/bsp_pwm.c **** 
  35:bsp/pwm/bsp_pwm.c ****     pwm->htim = config->htim;
  36:bsp/pwm/bsp_pwm.c ****     pwm->channel = config->channel;
  37:bsp/pwm/bsp_pwm.c ****     pwm->period = config->period;
  38:bsp/pwm/bsp_pwm.c ****     pwm->dutyratio = config->dutyratio;
  39:bsp/pwm/bsp_pwm.c ****     pwm->callback = config->callback;
  40:bsp/pwm/bsp_pwm.c ****     pwm->id = config->id;
  41:bsp/pwm/bsp_pwm.c ****     pwm->tclk = PWMSelectTclk(pwm->htim);
  42:bsp/pwm/bsp_pwm.c ****     // 启动PWM
  43:bsp/pwm/bsp_pwm.c ****     HAL_TIM_PWM_Start(pwm->htim, pwm->channel);
  44:bsp/pwm/bsp_pwm.c ****     PWMSetPeriod(pwm, pwm->period);
  45:bsp/pwm/bsp_pwm.c ****     PWMSetDutyRatio(pwm, pwm->dutyratio);
  46:bsp/pwm/bsp_pwm.c ****     pwm_instance[idx++] = pwm;
  47:bsp/pwm/bsp_pwm.c ****     return pwm;
  48:bsp/pwm/bsp_pwm.c **** }
  49:bsp/pwm/bsp_pwm.c **** 
  50:bsp/pwm/bsp_pwm.c **** /* 只是对HAL的函数进行了形式上的封装 */
  51:bsp/pwm/bsp_pwm.c **** void PWMStart(PWMInstance *pwm)
  52:bsp/pwm/bsp_pwm.c **** {
  53:bsp/pwm/bsp_pwm.c ****     HAL_TIM_PWM_Start(pwm->htim, pwm->channel);
  54:bsp/pwm/bsp_pwm.c **** }
  55:bsp/pwm/bsp_pwm.c **** 
  56:bsp/pwm/bsp_pwm.c **** /* 只是对HAL的函数进行了形式上的封装 */
  57:bsp/pwm/bsp_pwm.c **** void PWMStop(PWMInstance *pwm)
  58:bsp/pwm/bsp_pwm.c **** {
  59:bsp/pwm/bsp_pwm.c ****     HAL_TIM_PWM_Stop(pwm->htim, pwm->channel);
  60:bsp/pwm/bsp_pwm.c **** }
  61:bsp/pwm/bsp_pwm.c **** 
  62:bsp/pwm/bsp_pwm.c **** /*
  63:bsp/pwm/bsp_pwm.c ****  * @brief 设置pwm周期
  64:bsp/pwm/bsp_pwm.c ****  *
  65:bsp/pwm/bsp_pwm.c ****  * @param pwm pwm实例
  66:bsp/pwm/bsp_pwm.c ****  * @param period 周期 单位 s
  67:bsp/pwm/bsp_pwm.c ****  */
  68:bsp/pwm/bsp_pwm.c **** void PWMSetPeriod(PWMInstance *pwm, float period)
  69:bsp/pwm/bsp_pwm.c **** {
  70:bsp/pwm/bsp_pwm.c ****     __HAL_TIM_SetAutoreload(pwm->htim, period*((pwm->tclk)/(pwm->htim->Init.Prescaler+1)));
  71:bsp/pwm/bsp_pwm.c **** }
  72:bsp/pwm/bsp_pwm.c **** /*
  73:bsp/pwm/bsp_pwm.c ****     * @brief 设置pwm占空比
  74:bsp/pwm/bsp_pwm.c ****     *
  75:bsp/pwm/bsp_pwm.c ****     * @param pwm pwm实例
  76:bsp/pwm/bsp_pwm.c ****     * @param dutyratio 占空比 0~1
  77:bsp/pwm/bsp_pwm.c **** */
  78:bsp/pwm/bsp_pwm.c **** void PWMSetDutyRatio(PWMInstance *pwm, float dutyratio)
  79:bsp/pwm/bsp_pwm.c **** {
  80:bsp/pwm/bsp_pwm.c ****     __HAL_TIM_SetCompare(pwm->htim, pwm->channel, dutyratio * (pwm->htim->Instance->ARR));
  81:bsp/pwm/bsp_pwm.c **** }
  82:bsp/pwm/bsp_pwm.c **** 
  83:bsp/pwm/bsp_pwm.c **** /* 只是对HAL的函数进行了形式上的封装 */
  84:bsp/pwm/bsp_pwm.c **** void PWMStartDMA(PWMInstance *pwm, uint32_t *pData, uint32_t Size)
  85:bsp/pwm/bsp_pwm.c **** {
  86:bsp/pwm/bsp_pwm.c ****     HAL_TIM_PWM_Start_DMA(pwm->htim, pwm->channel, pData, Size);
  87:bsp/pwm/bsp_pwm.c **** }
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s 			page 3


  88:bsp/pwm/bsp_pwm.c **** 
  89:bsp/pwm/bsp_pwm.c **** // 设置pwm对应定时器时钟源频率
  90:bsp/pwm/bsp_pwm.c **** //tim2~7,12~14:APB1  tim1,8~11:APB2
  91:bsp/pwm/bsp_pwm.c **** static uint32_t PWMSelectTclk(TIM_HandleTypeDef *htim )
  92:bsp/pwm/bsp_pwm.c **** {
  29              		.loc 1 92 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 92 1 is_stmt 0 view .LVU1
  34 0000 08B5     		push	{r3, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  93:bsp/pwm/bsp_pwm.c ****     uintptr_t tclk_temp  = ((uintptr_t)((htim)->Instance));
  38              		.loc 1 93 5 is_stmt 1 view .LVU2
  39              		.loc 1 93 47 is_stmt 0 view .LVU3
  40 0002 0368     		ldr	r3, [r0]
  41              	.LVL1:
  94:bsp/pwm/bsp_pwm.c ****     if (
  42              		.loc 1 94 5 is_stmt 1 view .LVU4
  95:bsp/pwm/bsp_pwm.c ****             (tclk_temp <= (APB1PERIPH_BASE + 0x2000UL)) &&
  43              		.loc 1 95 57 is_stmt 0 view .LVU5
  44 0004 03F14042 		add	r2, r3, #-1073741824
  94:bsp/pwm/bsp_pwm.c ****     if (
  45              		.loc 1 94 8 view .LVU6
  46 0008 B2F5005F 		cmp	r2, #8192
  47 000c 0FD9     		bls	.L11
  96:bsp/pwm/bsp_pwm.c ****             (tclk_temp >= (APB1PERIPH_BASE + 0x0000UL)))
  97:bsp/pwm/bsp_pwm.c ****     {
  98:bsp/pwm/bsp_pwm.c ****         return (HAL_RCC_GetPCLK1Freq() * (APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPR
  99:bsp/pwm/bsp_pwm.c ****     }
 100:bsp/pwm/bsp_pwm.c ****     else if (
  48              		.loc 1 100 10 is_stmt 1 view .LVU7
 101:bsp/pwm/bsp_pwm.c ****             ((tclk_temp <= (APB2PERIPH_BASE + 0x0400UL)) &&
  49              		.loc 1 101 58 is_stmt 0 view .LVU8
  50 000e 03F13F42 		add	r2, r3, #-1090519040
  51 0012 02F57F02 		add	r2, r2, #16711680
 100:bsp/pwm/bsp_pwm.c ****             ((tclk_temp <= (APB2PERIPH_BASE + 0x0400UL)) &&
  52              		.loc 1 100 13 view .LVU9
  53 0016 B2F5806F 		cmp	r2, #1024
  54 001a 17D9     		bls	.L5
 102:bsp/pwm/bsp_pwm.c ****              (tclk_temp >= (APB2PERIPH_BASE + 0x0000UL))) ||
 103:bsp/pwm/bsp_pwm.c ****             ((tclk_temp <= (APB2PERIPH_BASE + 0x4800UL)) &&
  55              		.loc 1 103 58 view .LVU10
  56 001c A3F14023 		sub	r3, r3, #1073758208
  57              	.LVL2:
  58              		.loc 1 103 58 view .LVU11
  59 0020 A3F58033 		sub	r3, r3, #65536
 102:bsp/pwm/bsp_pwm.c ****              (tclk_temp >= (APB2PERIPH_BASE + 0x0000UL))) ||
  60              		.loc 1 102 59 view .LVU12
  61 0024 B3F5006F 		cmp	r3, #2048
  62 0028 10D9     		bls	.L5
 104:bsp/pwm/bsp_pwm.c ****              (tclk_temp >= (APB2PERIPH_BASE + 0x4000UL))))
 105:bsp/pwm/bsp_pwm.c ****     {
 106:bsp/pwm/bsp_pwm.c ****         return (HAL_RCC_GetPCLK2Freq() * (APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPR
 107:bsp/pwm/bsp_pwm.c ****     }
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s 			page 4


 108:bsp/pwm/bsp_pwm.c ****     return 0;
  63              		.loc 1 108 12 view .LVU13
  64 002a 0020     		movs	r0, #0
  65              	.LVL3:
  66              	.L1:
 109:bsp/pwm/bsp_pwm.c **** }...
  67              		.loc 1 109 1 view .LVU14
  68 002c 08BD     		pop	{r3, pc}
  69              	.LVL4:
  70              	.L11:
  98:bsp/pwm/bsp_pwm.c ****         return (HAL_RCC_GetPCLK1Freq() * (APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPR
  71              		.loc 1 98 9 is_stmt 1 view .LVU15
  98:bsp/pwm/bsp_pwm.c ****         return (HAL_RCC_GetPCLK1Freq() * (APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPR
  72              		.loc 1 98 17 is_stmt 0 view .LVU16
  73 002e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
  74              	.LVL5:
  98:bsp/pwm/bsp_pwm.c ****         return (HAL_RCC_GetPCLK1Freq() * (APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPR
  75              		.loc 1 98 61 discriminator 1 view .LVU17
  76 0032 0E4B     		ldr	r3, .L12
  77 0034 9B68     		ldr	r3, [r3, #8]
  98:bsp/pwm/bsp_pwm.c ****         return (HAL_RCC_GetPCLK1Freq() * (APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPR
  78              		.loc 1 98 85 discriminator 1 view .LVU18
  79 0036 C3F38223 		ubfx	r3, r3, #10, #3
  98:bsp/pwm/bsp_pwm.c ****         return (HAL_RCC_GetPCLK1Freq() * (APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPR
  80              		.loc 1 98 56 discriminator 1 view .LVU19
  81 003a 0D4A     		ldr	r2, .L12+4
  82 003c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  98:bsp/pwm/bsp_pwm.c ****         return (HAL_RCC_GetPCLK1Freq() * (APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPR
  83              		.loc 1 98 117 discriminator 1 view .LVU20
  84 003e 1BB9     		cbnz	r3, .L7
  85 0040 0123     		movs	r3, #1
  86              	.L3:
  98:bsp/pwm/bsp_pwm.c ****         return (HAL_RCC_GetPCLK1Freq() * (APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPR
  87              		.loc 1 98 40 discriminator 4 view .LVU21
  88 0042 03FB00F0 		mul	r0, r3, r0
  98:bsp/pwm/bsp_pwm.c ****         return (HAL_RCC_GetPCLK1Freq() * (APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPR
  89              		.loc 1 98 40 view .LVU22
  90 0046 F1E7     		b	.L1
  91              	.L7:
  98:bsp/pwm/bsp_pwm.c ****         return (HAL_RCC_GetPCLK1Freq() * (APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPR
  92              		.loc 1 98 117 discriminator 2 view .LVU23
  93 0048 0223     		movs	r3, #2
  94 004a FAE7     		b	.L3
  95              	.LVL6:
  96              	.L5:
 106:bsp/pwm/bsp_pwm.c ****         return (HAL_RCC_GetPCLK2Freq() * (APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPR
  97              		.loc 1 106 9 is_stmt 1 view .LVU24
 106:bsp/pwm/bsp_pwm.c ****         return (HAL_RCC_GetPCLK2Freq() * (APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPR
  98              		.loc 1 106 17 is_stmt 0 view .LVU25
  99 004c FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 100              	.LVL7:
 106:bsp/pwm/bsp_pwm.c ****         return (HAL_RCC_GetPCLK2Freq() * (APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPR
 101              		.loc 1 106 61 discriminator 1 view .LVU26
 102 0050 064B     		ldr	r3, .L12
 103 0052 9B68     		ldr	r3, [r3, #8]
 106:bsp/pwm/bsp_pwm.c ****         return (HAL_RCC_GetPCLK2Freq() * (APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPR
 104              		.loc 1 106 85 discriminator 1 view .LVU27
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s 			page 5


 105 0054 C3F38223 		ubfx	r3, r3, #10, #3
 106:bsp/pwm/bsp_pwm.c ****         return (HAL_RCC_GetPCLK2Freq() * (APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPR
 106              		.loc 1 106 56 discriminator 1 view .LVU28
 107 0058 054A     		ldr	r2, .L12+4
 108 005a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 106:bsp/pwm/bsp_pwm.c ****         return (HAL_RCC_GetPCLK2Freq() * (APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPR
 109              		.loc 1 106 117 discriminator 1 view .LVU29
 110 005c 1BB9     		cbnz	r3, .L9
 111 005e 0123     		movs	r3, #1
 112              	.L6:
 106:bsp/pwm/bsp_pwm.c ****         return (HAL_RCC_GetPCLK2Freq() * (APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPR
 113              		.loc 1 106 40 discriminator 4 view .LVU30
 114 0060 03FB00F0 		mul	r0, r3, r0
 106:bsp/pwm/bsp_pwm.c ****         return (HAL_RCC_GetPCLK2Freq() * (APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPR
 115              		.loc 1 106 40 view .LVU31
 116 0064 E2E7     		b	.L1
 117              	.L9:
 106:bsp/pwm/bsp_pwm.c ****         return (HAL_RCC_GetPCLK2Freq() * (APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPR
 118              		.loc 1 106 117 discriminator 2 view .LVU32
 119 0066 0223     		movs	r3, #2
 120 0068 FAE7     		b	.L6
 121              	.L13:
 122 006a 00BF     		.align	2
 123              	.L12:
 124 006c 00380240 		.word	1073887232
 125 0070 00000000 		.word	APBPrescTable
 126              		.cfi_endproc
 127              	.LFE141:
 129              		.section	.text.HAL_TIM_PWM_PulseFinishedCallback,"ax",%progbits
 130              		.align	1
 131              		.global	HAL_TIM_PWM_PulseFinishedCallback
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 136              	HAL_TIM_PWM_PulseFinishedCallback:
 137              	.LVL8:
 138              	.LFB134:
  15:bsp/pwm/bsp_pwm.c **** {
 139              		.loc 1 15 1 is_stmt 1 view -0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
  15:bsp/pwm/bsp_pwm.c **** {
 143              		.loc 1 15 1 is_stmt 0 view .LVU34
 144 0000 08B5     		push	{r3, lr}
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 3, -8
 147              		.cfi_offset 14, -4
  16:bsp/pwm/bsp_pwm.c ****     for (uint8_t i = 0; i < idx; i++)
 148              		.loc 1 16 5 is_stmt 1 view .LVU35
 149              	.LBB2:
  16:bsp/pwm/bsp_pwm.c ****     for (uint8_t i = 0; i < idx; i++)
 150              		.loc 1 16 10 view .LVU36
 151              	.LVL9:
  16:bsp/pwm/bsp_pwm.c ****     for (uint8_t i = 0; i < idx; i++)
 152              		.loc 1 16 18 is_stmt 0 view .LVU37
 153 0002 0023     		movs	r3, #0
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s 			page 6


  16:bsp/pwm/bsp_pwm.c ****     for (uint8_t i = 0; i < idx; i++)
 154              		.loc 1 16 5 view .LVU38
 155 0004 01E0     		b	.L15
 156              	.LVL10:
 157              	.L16:
  16:bsp/pwm/bsp_pwm.c ****     for (uint8_t i = 0; i < idx; i++)
 158              		.loc 1 16 35 is_stmt 1 discriminator 2 view .LVU39
 159 0006 0133     		adds	r3, r3, #1
 160              	.LVL11:
  16:bsp/pwm/bsp_pwm.c ****     for (uint8_t i = 0; i < idx; i++)
 161              		.loc 1 16 35 is_stmt 0 discriminator 2 view .LVU40
 162 0008 DBB2     		uxtb	r3, r3
 163              	.LVL12:
 164              	.L15:
  16:bsp/pwm/bsp_pwm.c ****     for (uint8_t i = 0; i < idx; i++)
 165              		.loc 1 16 27 is_stmt 1 discriminator 1 view .LVU41
 166 000a 0C4A     		ldr	r2, .L21
 167 000c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 168 000e 9A42     		cmp	r2, r3
 169 0010 13D9     		bls	.L14
  18:bsp/pwm/bsp_pwm.c ****         if (pwm_instance[i]->htim == htim && htim->Channel == (1<<(pwm_instance[i]->channel/4)))
 170              		.loc 1 18 9 view .LVU42
  18:bsp/pwm/bsp_pwm.c ****         if (pwm_instance[i]->htim == htim && htim->Channel == (1<<(pwm_instance[i]->channel/4)))
 171              		.loc 1 18 25 is_stmt 0 view .LVU43
 172 0012 0B4A     		ldr	r2, .L21+4
 173 0014 52F82320 		ldr	r2, [r2, r3, lsl #2]
  18:bsp/pwm/bsp_pwm.c ****         if (pwm_instance[i]->htim == htim && htim->Channel == (1<<(pwm_instance[i]->channel/4)))
 174              		.loc 1 18 28 view .LVU44
 175 0018 1168     		ldr	r1, [r2]
  18:bsp/pwm/bsp_pwm.c ****         if (pwm_instance[i]->htim == htim && htim->Channel == (1<<(pwm_instance[i]->channel/4)))
 176              		.loc 1 18 12 view .LVU45
 177 001a 8142     		cmp	r1, r0
 178 001c F3D1     		bne	.L16
  18:bsp/pwm/bsp_pwm.c ****         if (pwm_instance[i]->htim == htim && htim->Channel == (1<<(pwm_instance[i]->channel/4)))
 179              		.loc 1 18 50 discriminator 1 view .LVU46
 180 001e 90F81CE0 		ldrb	lr, [r0, #28]	@ zero_extendqisi2
  18:bsp/pwm/bsp_pwm.c ****         if (pwm_instance[i]->htim == htim && htim->Channel == (1<<(pwm_instance[i]->channel/4)))
 181              		.loc 1 18 83 discriminator 1 view .LVU47
 182 0022 5168     		ldr	r1, [r2, #4]
  18:bsp/pwm/bsp_pwm.c ****         if (pwm_instance[i]->htim == htim && htim->Channel == (1<<(pwm_instance[i]->channel/4)))
 183              		.loc 1 18 92 discriminator 1 view .LVU48
 184 0024 4FEA910C 		lsr	ip, r1, #2
  18:bsp/pwm/bsp_pwm.c ****         if (pwm_instance[i]->htim == htim && htim->Channel == (1<<(pwm_instance[i]->channel/4)))
 185              		.loc 1 18 65 discriminator 1 view .LVU49
 186 0028 0121     		movs	r1, #1
 187 002a 01FA0CF1 		lsl	r1, r1, ip
  18:bsp/pwm/bsp_pwm.c ****         if (pwm_instance[i]->htim == htim && htim->Channel == (1<<(pwm_instance[i]->channel/4)))
 188              		.loc 1 18 43 discriminator 1 view .LVU50
 189 002e 8E45     		cmp	lr, r1
 190 0030 E9D1     		bne	.L16
  20:bsp/pwm/bsp_pwm.c ****             if (pwm_instance[i]->callback) // 如果有回调函数
 191              		.loc 1 20 13 is_stmt 1 view .LVU51
  20:bsp/pwm/bsp_pwm.c ****             if (pwm_instance[i]->callback) // 如果有回调函数
 192              		.loc 1 20 32 is_stmt 0 view .LVU52
 193 0032 5369     		ldr	r3, [r2, #20]
 194              	.LVL13:
  20:bsp/pwm/bsp_pwm.c ****             if (pwm_instance[i]->callback) // 如果有回调函数
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s 			page 7


 195              		.loc 1 20 16 view .LVU53
 196 0034 0BB1     		cbz	r3, .L14
  21:bsp/pwm/bsp_pwm.c ****                 pwm_instance[i]->callback(pwm_instance[i]);
 197              		.loc 1 21 17 is_stmt 1 view .LVU54
 198 0036 1046     		mov	r0, r2
 199              	.LVL14:
  21:bsp/pwm/bsp_pwm.c ****                 pwm_instance[i]->callback(pwm_instance[i]);
 200              		.loc 1 21 17 is_stmt 0 view .LVU55
 201 0038 9847     		blx	r3
 202              	.LVL15:
  22:bsp/pwm/bsp_pwm.c ****             return; // 一次只能有一个通道的中断,所以直接返回
 203              		.loc 1 22 13 is_stmt 1 view .LVU56
 204              	.L14:
  22:bsp/pwm/bsp_pwm.c ****             return; // 一次只能有一个通道的中断,所以直接返回
 205              		.loc 1 22 13 is_stmt 0 view .LVU57
 206              	.LBE2:
  25:bsp/pwm/bsp_pwm.c **** }
 207              		.loc 1 25 1 view .LVU58
 208 003a 08BD     		pop	{r3, pc}
 209              	.L22:
 210              		.align	2
 211              	.L21:
 212 003c 00000000 		.word	idx
 213 0040 00000000 		.word	pwm_instance
 214              		.cfi_endproc
 215              	.LFE134:
 217              		.section	.text.PWMStart,"ax",%progbits
 218              		.align	1
 219              		.global	PWMStart
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 224              	PWMStart:
 225              	.LVL16:
 226              	.LFB136:
  52:bsp/pwm/bsp_pwm.c **** {
 227              		.loc 1 52 1 is_stmt 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
  52:bsp/pwm/bsp_pwm.c **** {
 231              		.loc 1 52 1 is_stmt 0 view .LVU60
 232 0000 08B5     		push	{r3, lr}
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 3, -8
 235              		.cfi_offset 14, -4
  53:bsp/pwm/bsp_pwm.c ****     HAL_TIM_PWM_Start(pwm->htim, pwm->channel);
 236              		.loc 1 53 5 is_stmt 1 view .LVU61
 237 0002 4168     		ldr	r1, [r0, #4]
 238 0004 0068     		ldr	r0, [r0]
 239              	.LVL17:
  53:bsp/pwm/bsp_pwm.c ****     HAL_TIM_PWM_Start(pwm->htim, pwm->channel);
 240              		.loc 1 53 5 is_stmt 0 view .LVU62
 241 0006 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 242              	.LVL18:
  54:bsp/pwm/bsp_pwm.c **** }
 243              		.loc 1 54 1 view .LVU63
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s 			page 8


 244 000a 08BD     		pop	{r3, pc}
 245              		.cfi_endproc
 246              	.LFE136:
 248              		.section	.text.PWMStop,"ax",%progbits
 249              		.align	1
 250              		.global	PWMStop
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 255              	PWMStop:
 256              	.LVL19:
 257              	.LFB137:
  58:bsp/pwm/bsp_pwm.c **** {
 258              		.loc 1 58 1 is_stmt 1 view -0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
  58:bsp/pwm/bsp_pwm.c **** {
 262              		.loc 1 58 1 is_stmt 0 view .LVU65
 263 0000 08B5     		push	{r3, lr}
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 3, -8
 266              		.cfi_offset 14, -4
  59:bsp/pwm/bsp_pwm.c ****     HAL_TIM_PWM_Stop(pwm->htim, pwm->channel);
 267              		.loc 1 59 5 is_stmt 1 view .LVU66
 268 0002 4168     		ldr	r1, [r0, #4]
 269 0004 0068     		ldr	r0, [r0]
 270              	.LVL20:
  59:bsp/pwm/bsp_pwm.c ****     HAL_TIM_PWM_Stop(pwm->htim, pwm->channel);
 271              		.loc 1 59 5 is_stmt 0 view .LVU67
 272 0006 FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 273              	.LVL21:
  60:bsp/pwm/bsp_pwm.c **** }
 274              		.loc 1 60 1 view .LVU68
 275 000a 08BD     		pop	{r3, pc}
 276              		.cfi_endproc
 277              	.LFE137:
 279              		.section	.text.PWMSetPeriod,"ax",%progbits
 280              		.align	1
 281              		.global	PWMSetPeriod
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 286              	PWMSetPeriod:
 287              	.LVL22:
 288              	.LFB138:
  69:bsp/pwm/bsp_pwm.c **** {
 289              		.loc 1 69 1 is_stmt 1 view -0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293              		@ link register save eliminated.
  70:bsp/pwm/bsp_pwm.c ****     __HAL_TIM_SetAutoreload(pwm->htim, period*((pwm->tclk)/(pwm->htim->Init.Prescaler+1)));
 294              		.loc 1 70 5 view .LVU70
  70:bsp/pwm/bsp_pwm.c ****     __HAL_TIM_SetAutoreload(pwm->htim, period*((pwm->tclk)/(pwm->htim->Init.Prescaler+1)));
 295              		.loc 1 70 5 view .LVU71
 296 0000 8368     		ldr	r3, [r0, #8]
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s 			page 9


 297 0002 0168     		ldr	r1, [r0]
 298 0004 4A68     		ldr	r2, [r1, #4]
 299 0006 0132     		adds	r2, r2, #1
 300 0008 B3FBF2F3 		udiv	r3, r3, r2
 301 000c 07EE903A 		vmov	s15, r3	@ int
 302 0010 F8EE677A 		vcvt.f32.u32	s15, s15
 303 0014 67EE807A 		vmul.f32	s15, s15, s0
 304 0018 0B68     		ldr	r3, [r1]
 305 001a FCEEE77A 		vcvt.u32.f32	s15, s15
 306 001e C3ED0B7A 		vstr.32	s15, [r3, #44]	@ int
  70:bsp/pwm/bsp_pwm.c ****     __HAL_TIM_SetAutoreload(pwm->htim, period*((pwm->tclk)/(pwm->htim->Init.Prescaler+1)));
 307              		.loc 1 70 5 view .LVU72
 308 0022 8368     		ldr	r3, [r0, #8]
 309 0024 0168     		ldr	r1, [r0]
 310 0026 4A68     		ldr	r2, [r1, #4]
 311 0028 0132     		adds	r2, r2, #1
 312 002a B3FBF2F3 		udiv	r3, r3, r2
 313 002e 07EE903A 		vmov	s15, r3	@ int
 314 0032 F8EE677A 		vcvt.f32.u32	s15, s15
 315 0036 27EE800A 		vmul.f32	s0, s15, s0
 316              	.LVL23:
  70:bsp/pwm/bsp_pwm.c ****     __HAL_TIM_SetAutoreload(pwm->htim, period*((pwm->tclk)/(pwm->htim->Init.Prescaler+1)));
 317              		.loc 1 70 5 is_stmt 0 view .LVU73
 318 003a BCEEC00A 		vcvt.u32.f32	s0, s0
 319 003e 81ED030A 		vstr.32	s0, [r1, #12]	@ int
  70:bsp/pwm/bsp_pwm.c ****     __HAL_TIM_SetAutoreload(pwm->htim, period*((pwm->tclk)/(pwm->htim->Init.Prescaler+1)));
 320              		.loc 1 70 5 is_stmt 1 view .LVU74
  71:bsp/pwm/bsp_pwm.c **** }
 321              		.loc 1 71 1 is_stmt 0 view .LVU75
 322 0042 7047     		bx	lr
 323              		.cfi_endproc
 324              	.LFE138:
 326              		.section	.text.PWMSetDutyRatio,"ax",%progbits
 327              		.align	1
 328              		.global	PWMSetDutyRatio
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 333              	PWMSetDutyRatio:
 334              	.LVL24:
 335              	.LFB139:
  79:bsp/pwm/bsp_pwm.c **** {
 336              		.loc 1 79 1 is_stmt 1 view -0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		@ link register save eliminated.
  80:bsp/pwm/bsp_pwm.c ****     __HAL_TIM_SetCompare(pwm->htim, pwm->channel, dutyratio * (pwm->htim->Instance->ARR));
 341              		.loc 1 80 5 view .LVU77
 342 0000 4368     		ldr	r3, [r0, #4]
 343 0002 63B9     		cbnz	r3, .L29
  80:bsp/pwm/bsp_pwm.c ****     __HAL_TIM_SetCompare(pwm->htim, pwm->channel, dutyratio * (pwm->htim->Instance->ARR));
 344              		.loc 1 80 5 is_stmt 0 discriminator 1 view .LVU78
 345 0004 0368     		ldr	r3, [r0]
 346 0006 1B68     		ldr	r3, [r3]
 347 0008 D3ED0B7A 		vldr.32	s15, [r3, #44]	@ int
 348 000c F8EE677A 		vcvt.f32.u32	s15, s15
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s 			page 10


 349 0010 27EE800A 		vmul.f32	s0, s15, s0
 350              	.LVL25:
  80:bsp/pwm/bsp_pwm.c ****     __HAL_TIM_SetCompare(pwm->htim, pwm->channel, dutyratio * (pwm->htim->Instance->ARR));
 351              		.loc 1 80 5 discriminator 1 view .LVU79
 352 0014 BCEEC00A 		vcvt.u32.f32	s0, s0
 353 0018 83ED0D0A 		vstr.32	s0, [r3, #52]	@ int
 354 001c 7047     		bx	lr
 355              	.LVL26:
 356              	.L29:
  80:bsp/pwm/bsp_pwm.c ****     __HAL_TIM_SetCompare(pwm->htim, pwm->channel, dutyratio * (pwm->htim->Instance->ARR));
 357              		.loc 1 80 5 discriminator 2 view .LVU80
 358 001e 042B     		cmp	r3, #4
 359 0020 0ED0     		beq	.L33
  80:bsp/pwm/bsp_pwm.c ****     __HAL_TIM_SetCompare(pwm->htim, pwm->channel, dutyratio * (pwm->htim->Instance->ARR));
 360              		.loc 1 80 5 discriminator 4 view .LVU81
 361 0022 082B     		cmp	r3, #8
 362 0024 19D0     		beq	.L34
  80:bsp/pwm/bsp_pwm.c ****     __HAL_TIM_SetCompare(pwm->htim, pwm->channel, dutyratio * (pwm->htim->Instance->ARR));
 363              		.loc 1 80 5 discriminator 7 view .LVU82
 364 0026 0368     		ldr	r3, [r0]
 365 0028 1B68     		ldr	r3, [r3]
 366 002a D3ED0B7A 		vldr.32	s15, [r3, #44]	@ int
 367 002e F8EE677A 		vcvt.f32.u32	s15, s15
 368 0032 67EE807A 		vmul.f32	s15, s15, s0
 369 0036 FCEEE77A 		vcvt.u32.f32	s15, s15
 370 003a C3ED107A 		vstr.32	s15, [r3, #64]	@ int
  81:bsp/pwm/bsp_pwm.c **** }
 371              		.loc 1 81 1 view .LVU83
 372 003e 7047     		bx	lr
 373              	.L33:
  80:bsp/pwm/bsp_pwm.c ****     __HAL_TIM_SetCompare(pwm->htim, pwm->channel, dutyratio * (pwm->htim->Instance->ARR));
 374              		.loc 1 80 5 discriminator 3 view .LVU84
 375 0040 0368     		ldr	r3, [r0]
 376 0042 1B68     		ldr	r3, [r3]
 377 0044 D3ED0B7A 		vldr.32	s15, [r3, #44]	@ int
 378 0048 F8EE677A 		vcvt.f32.u32	s15, s15
 379 004c 67EE807A 		vmul.f32	s15, s15, s0
 380 0050 FCEEE77A 		vcvt.u32.f32	s15, s15
 381 0054 C3ED0E7A 		vstr.32	s15, [r3, #56]	@ int
 382 0058 7047     		bx	lr
 383              	.L34:
  80:bsp/pwm/bsp_pwm.c ****     __HAL_TIM_SetCompare(pwm->htim, pwm->channel, dutyratio * (pwm->htim->Instance->ARR));
 384              		.loc 1 80 5 discriminator 6 view .LVU85
 385 005a 0368     		ldr	r3, [r0]
 386 005c 1B68     		ldr	r3, [r3]
 387 005e D3ED0B7A 		vldr.32	s15, [r3, #44]	@ int
 388 0062 F8EE677A 		vcvt.f32.u32	s15, s15
 389 0066 67EE807A 		vmul.f32	s15, s15, s0
 390 006a FCEEE77A 		vcvt.u32.f32	s15, s15
 391 006e C3ED0F7A 		vstr.32	s15, [r3, #60]	@ int
 392 0072 7047     		bx	lr
 393              		.cfi_endproc
 394              	.LFE139:
 396              		.section	.text.PWMRegister,"ax",%progbits
 397              		.align	1
 398              		.global	PWMRegister
 399              		.syntax unified
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s 			page 11


 400              		.thumb
 401              		.thumb_func
 403              	PWMRegister:
 404              	.LVL27:
 405              	.LFB135:
  28:bsp/pwm/bsp_pwm.c **** {
 406              		.loc 1 28 1 is_stmt 1 view -0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
  28:bsp/pwm/bsp_pwm.c **** {
 410              		.loc 1 28 1 is_stmt 0 view .LVU87
 411 0000 38B5     		push	{r3, r4, r5, lr}
 412              		.cfi_def_cfa_offset 16
 413              		.cfi_offset 3, -16
 414              		.cfi_offset 4, -12
 415              		.cfi_offset 5, -8
 416              		.cfi_offset 14, -4
  29:bsp/pwm/bsp_pwm.c ****     if (idx >= PWM_DEVICE_CNT) // 超过最大实例数,考虑增加或查看是否有内存泄漏
 417              		.loc 1 29 5 is_stmt 1 view .LVU88
  29:bsp/pwm/bsp_pwm.c ****     if (idx >= PWM_DEVICE_CNT) // 超过最大实例数,考虑增加或查看是否有内存泄漏
 418              		.loc 1 29 13 is_stmt 0 view .LVU89
 419 0002 1C4B     		ldr	r3, .L39
 420 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  29:bsp/pwm/bsp_pwm.c ****     if (idx >= PWM_DEVICE_CNT) // 超过最大实例数,考虑增加或查看是否有内存泄漏
 421              		.loc 1 29 8 view .LVU90
 422 0006 0F2B     		cmp	r3, #15
 423 0008 00D9     		bls	.L36
 424              	.L37:
  30:bsp/pwm/bsp_pwm.c ****         while (1)
 425              		.loc 1 30 9 is_stmt 1 view .LVU91
  30:bsp/pwm/bsp_pwm.c ****         while (1)
 426              		.loc 1 30 15 view .LVU92
 427 000a FEE7     		b	.L37
 428              	.L36:
 429 000c 0546     		mov	r5, r0
  32:bsp/pwm/bsp_pwm.c ****     PWMInstance *pwm = (PWMInstance *)malloc(sizeof(PWMInstance));
 430              		.loc 1 32 5 view .LVU93
  32:bsp/pwm/bsp_pwm.c ****     PWMInstance *pwm = (PWMInstance *)malloc(sizeof(PWMInstance));
 431              		.loc 1 32 39 is_stmt 0 view .LVU94
 432 000e 1C20     		movs	r0, #28
 433              	.LVL28:
  32:bsp/pwm/bsp_pwm.c ****     PWMInstance *pwm = (PWMInstance *)malloc(sizeof(PWMInstance));
 434              		.loc 1 32 39 view .LVU95
 435 0010 FFF7FEFF 		bl	malloc
 436              	.LVL29:
 437 0014 0446     		mov	r4, r0
 438              	.LVL30:
  33:bsp/pwm/bsp_pwm.c ****     memset(pwm, 0, sizeof(PWMInstance));
 439              		.loc 1 33 5 is_stmt 1 view .LVU96
 440 0016 0023     		movs	r3, #0
 441 0018 0360     		str	r3, [r0]	@ unaligned
 442 001a 4360     		str	r3, [r0, #4]	@ unaligned
 443 001c 8360     		str	r3, [r0, #8]	@ unaligned
 444 001e C360     		str	r3, [r0, #12]	@ unaligned
 445 0020 0361     		str	r3, [r0, #16]	@ unaligned
 446 0022 4361     		str	r3, [r0, #20]	@ unaligned
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s 			page 12


 447 0024 8361     		str	r3, [r0, #24]	@ unaligned
  35:bsp/pwm/bsp_pwm.c ****     pwm->htim = config->htim;
 448              		.loc 1 35 5 view .LVU97
  35:bsp/pwm/bsp_pwm.c ****     pwm->htim = config->htim;
 449              		.loc 1 35 23 is_stmt 0 view .LVU98
 450 0026 2868     		ldr	r0, [r5]
 451              	.LVL31:
  35:bsp/pwm/bsp_pwm.c ****     pwm->htim = config->htim;
 452              		.loc 1 35 15 view .LVU99
 453 0028 2060     		str	r0, [r4]
  36:bsp/pwm/bsp_pwm.c ****     pwm->channel = config->channel;
 454              		.loc 1 36 5 is_stmt 1 view .LVU100
  36:bsp/pwm/bsp_pwm.c ****     pwm->channel = config->channel;
 455              		.loc 1 36 26 is_stmt 0 view .LVU101
 456 002a 6B68     		ldr	r3, [r5, #4]
  36:bsp/pwm/bsp_pwm.c ****     pwm->channel = config->channel;
 457              		.loc 1 36 18 view .LVU102
 458 002c 6360     		str	r3, [r4, #4]
  37:bsp/pwm/bsp_pwm.c ****     pwm->period = config->period;
 459              		.loc 1 37 5 is_stmt 1 view .LVU103
  37:bsp/pwm/bsp_pwm.c ****     pwm->period = config->period;
 460              		.loc 1 37 25 is_stmt 0 view .LVU104
 461 002e AB68     		ldr	r3, [r5, #8]	@ float
  37:bsp/pwm/bsp_pwm.c ****     pwm->period = config->period;
 462              		.loc 1 37 17 view .LVU105
 463 0030 E360     		str	r3, [r4, #12]	@ float
  38:bsp/pwm/bsp_pwm.c ****     pwm->dutyratio = config->dutyratio;
 464              		.loc 1 38 5 is_stmt 1 view .LVU106
  38:bsp/pwm/bsp_pwm.c ****     pwm->dutyratio = config->dutyratio;
 465              		.loc 1 38 28 is_stmt 0 view .LVU107
 466 0032 EB68     		ldr	r3, [r5, #12]	@ float
  38:bsp/pwm/bsp_pwm.c ****     pwm->dutyratio = config->dutyratio;
 467              		.loc 1 38 20 view .LVU108
 468 0034 2361     		str	r3, [r4, #16]	@ float
  39:bsp/pwm/bsp_pwm.c ****     pwm->callback = config->callback;
 469              		.loc 1 39 5 is_stmt 1 view .LVU109
  39:bsp/pwm/bsp_pwm.c ****     pwm->callback = config->callback;
 470              		.loc 1 39 27 is_stmt 0 view .LVU110
 471 0036 2B69     		ldr	r3, [r5, #16]
  39:bsp/pwm/bsp_pwm.c ****     pwm->callback = config->callback;
 472              		.loc 1 39 19 view .LVU111
 473 0038 6361     		str	r3, [r4, #20]
  40:bsp/pwm/bsp_pwm.c ****     pwm->id = config->id;
 474              		.loc 1 40 5 is_stmt 1 view .LVU112
  40:bsp/pwm/bsp_pwm.c ****     pwm->id = config->id;
 475              		.loc 1 40 21 is_stmt 0 view .LVU113
 476 003a 6B69     		ldr	r3, [r5, #20]
  40:bsp/pwm/bsp_pwm.c ****     pwm->id = config->id;
 477              		.loc 1 40 13 view .LVU114
 478 003c A361     		str	r3, [r4, #24]
  41:bsp/pwm/bsp_pwm.c ****     pwm->tclk = PWMSelectTclk(pwm->htim);
 479              		.loc 1 41 5 is_stmt 1 view .LVU115
  41:bsp/pwm/bsp_pwm.c ****     pwm->tclk = PWMSelectTclk(pwm->htim);
 480              		.loc 1 41 17 is_stmt 0 view .LVU116
 481 003e FFF7FEFF 		bl	PWMSelectTclk
 482              	.LVL32:
  41:bsp/pwm/bsp_pwm.c ****     pwm->tclk = PWMSelectTclk(pwm->htim);
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s 			page 13


 483              		.loc 1 41 15 discriminator 1 view .LVU117
 484 0042 A060     		str	r0, [r4, #8]
  43:bsp/pwm/bsp_pwm.c ****     HAL_TIM_PWM_Start(pwm->htim, pwm->channel);
 485              		.loc 1 43 5 is_stmt 1 view .LVU118
 486 0044 6168     		ldr	r1, [r4, #4]
 487 0046 2068     		ldr	r0, [r4]
 488 0048 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 489              	.LVL33:
  44:bsp/pwm/bsp_pwm.c ****     PWMSetPeriod(pwm, pwm->period);
 490              		.loc 1 44 5 view .LVU119
 491 004c 94ED030A 		vldr.32	s0, [r4, #12]
 492 0050 2046     		mov	r0, r4
 493 0052 FFF7FEFF 		bl	PWMSetPeriod
 494              	.LVL34:
  45:bsp/pwm/bsp_pwm.c ****     PWMSetDutyRatio(pwm, pwm->dutyratio);
 495              		.loc 1 45 5 view .LVU120
 496 0056 94ED040A 		vldr.32	s0, [r4, #16]
 497 005a 2046     		mov	r0, r4
 498 005c FFF7FEFF 		bl	PWMSetDutyRatio
 499              	.LVL35:
  46:bsp/pwm/bsp_pwm.c ****     pwm_instance[idx++] = pwm;
 500              		.loc 1 46 5 view .LVU121
  46:bsp/pwm/bsp_pwm.c ****     pwm_instance[idx++] = pwm;
 501              		.loc 1 46 21 is_stmt 0 view .LVU122
 502 0060 044A     		ldr	r2, .L39
 503 0062 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 504 0064 591C     		adds	r1, r3, #1
 505 0066 1170     		strb	r1, [r2]
  46:bsp/pwm/bsp_pwm.c ****     pwm_instance[idx++] = pwm;
 506              		.loc 1 46 25 view .LVU123
 507 0068 034A     		ldr	r2, .L39+4
 508 006a 42F82340 		str	r4, [r2, r3, lsl #2]
  47:bsp/pwm/bsp_pwm.c ****     return pwm;
 509              		.loc 1 47 5 is_stmt 1 view .LVU124
  48:bsp/pwm/bsp_pwm.c **** }
 510              		.loc 1 48 1 is_stmt 0 view .LVU125
 511 006e 2046     		mov	r0, r4
 512 0070 38BD     		pop	{r3, r4, r5, pc}
 513              	.LVL36:
 514              	.L40:
  48:bsp/pwm/bsp_pwm.c **** }
 515              		.loc 1 48 1 view .LVU126
 516 0072 00BF     		.align	2
 517              	.L39:
 518 0074 00000000 		.word	idx
 519 0078 00000000 		.word	pwm_instance
 520              		.cfi_endproc
 521              	.LFE135:
 523              		.section	.text.PWMStartDMA,"ax",%progbits
 524              		.align	1
 525              		.global	PWMStartDMA
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 530              	PWMStartDMA:
 531              	.LVL37:
 532              	.LFB140:
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s 			page 14


  85:bsp/pwm/bsp_pwm.c **** {
 533              		.loc 1 85 1 is_stmt 1 view -0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
  85:bsp/pwm/bsp_pwm.c **** {
 537              		.loc 1 85 1 is_stmt 0 view .LVU128
 538 0000 08B5     		push	{r3, lr}
 539              		.cfi_def_cfa_offset 8
 540              		.cfi_offset 3, -8
 541              		.cfi_offset 14, -4
  86:bsp/pwm/bsp_pwm.c ****     HAL_TIM_PWM_Start_DMA(pwm->htim, pwm->channel, pData, Size);
 542              		.loc 1 86 5 is_stmt 1 view .LVU129
 543 0002 93B2     		uxth	r3, r2
 544 0004 0A46     		mov	r2, r1
 545              	.LVL38:
  86:bsp/pwm/bsp_pwm.c ****     HAL_TIM_PWM_Start_DMA(pwm->htim, pwm->channel, pData, Size);
 546              		.loc 1 86 5 is_stmt 0 view .LVU130
 547 0006 4168     		ldr	r1, [r0, #4]
 548              	.LVL39:
  86:bsp/pwm/bsp_pwm.c ****     HAL_TIM_PWM_Start_DMA(pwm->htim, pwm->channel, pData, Size);
 549              		.loc 1 86 5 view .LVU131
 550 0008 0068     		ldr	r0, [r0]
 551              	.LVL40:
  86:bsp/pwm/bsp_pwm.c ****     HAL_TIM_PWM_Start_DMA(pwm->htim, pwm->channel, pData, Size);
 552              		.loc 1 86 5 view .LVU132
 553 000a FFF7FEFF 		bl	HAL_TIM_PWM_Start_DMA
 554              	.LVL41:
  87:bsp/pwm/bsp_pwm.c **** }
 555              		.loc 1 87 1 view .LVU133
 556 000e 08BD     		pop	{r3, pc}
 557              		.cfi_endproc
 558              	.LFE140:
 560              		.section	.bss.pwm_instance,"aw",%nobits
 561              		.align	2
 564              	pwm_instance:
 565 0000 00000000 		.space	64
 565      00000000 
 565      00000000 
 565      00000000 
 565      00000000 
 566              		.section	.bss.idx,"aw",%nobits
 569              	idx:
 570 0000 00       		.space	1
 571              		.text
 572              	.Letext0:
 573              		.file 2 "C:/Users/Sive/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-too
 574              		.file 3 "C:/Users/Sive/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-too
 575              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 576              		.file 5 "C:/Users/Sive/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-too
 577              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 578              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 579              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 580              		.file 9 "bsp/pwm/bsp_pwm.h"
 581              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 582              		.file 11 "C:/Users/Sive/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 583              		.file 12 "C:/Users/Sive/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s 			page 15


 584              		.file 13 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
ARM GAS  C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 bsp_pwm.c
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:21     .text.PWMSelectTclk:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:26     .text.PWMSelectTclk:00000000 PWMSelectTclk
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:124    .text.PWMSelectTclk:0000006c $d
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:130    .text.HAL_TIM_PWM_PulseFinishedCallback:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:136    .text.HAL_TIM_PWM_PulseFinishedCallback:00000000 HAL_TIM_PWM_PulseFinishedCallback
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:212    .text.HAL_TIM_PWM_PulseFinishedCallback:0000003c $d
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:569    .bss.idx:00000000 idx
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:564    .bss.pwm_instance:00000000 pwm_instance
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:218    .text.PWMStart:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:224    .text.PWMStart:00000000 PWMStart
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:249    .text.PWMStop:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:255    .text.PWMStop:00000000 PWMStop
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:280    .text.PWMSetPeriod:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:286    .text.PWMSetPeriod:00000000 PWMSetPeriod
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:327    .text.PWMSetDutyRatio:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:333    .text.PWMSetDutyRatio:00000000 PWMSetDutyRatio
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:397    .text.PWMRegister:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:403    .text.PWMRegister:00000000 PWMRegister
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:518    .text.PWMRegister:00000074 $d
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:524    .text.PWMStartDMA:00000000 $t
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:530    .text.PWMStartDMA:00000000 PWMStartDMA
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:561    .bss.pwm_instance:00000000 $d
C:\Users\Sive\AppData\Local\Temp\ccgXrKMf.s:570    .bss.idx:00000000 $d

UNDEFINED SYMBOLS
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
APBPrescTable
HAL_TIM_PWM_Start
HAL_TIM_PWM_Stop
malloc
HAL_TIM_PWM_Start_DMA
